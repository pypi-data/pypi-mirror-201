Metadata-Version: 2.1
Name: pypersonality
Version: 0.0.4
Summary: Identify the personality from a given text using (MBTI) Myers-Briggs Personality Type Dataset
Author-email: Gokul Kartha <kartha.gokul@gmail.com>
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Dist: spacy
Requires-Dist: pandas
Requires-Dist: nltk
Requires-Dist: importlib_resources
Requires-Dist: wheel
Requires-Dist: pyspark>=3.0.0 ; extra == "spark"
Requires-Dist: bandit[toml]==1.7.5 ; extra == "test"
Requires-Dist: black==23.1.0 ; extra == "test"
Requires-Dist: check-manifest==0.49 ; extra == "test"
Requires-Dist: flake8-bugbear==23.3.12 ; extra == "test"
Requires-Dist: flake8-docstrings ; extra == "test"
Requires-Dist: flake8-formatter_junit_xml ; extra == "test"
Requires-Dist: flake8 ; extra == "test"
Requires-Dist: flake8-pyproject ; extra == "test"
Requires-Dist: pre-commit==3.2.0 ; extra == "test"
Requires-Dist: pylint==2.17.0 ; extra == "test"
Requires-Dist: pylint_junit ; extra == "test"
Requires-Dist: pytest-cov==3.0.0 ; extra == "test"
Requires-Dist: pytest-mock<3.10.1 ; extra == "test"
Requires-Dist: pytest-runner ; extra == "test"
Requires-Dist: pytest==7.2.2 ; extra == "test"
Requires-Dist: pytest-github-actions-annotate-failures ; extra == "test"
Requires-Dist: shellcheck-py==0.9.0.2 ; extra == "test"
Requires-Dist: psutil ; extra == "test"
Requires-Dist: twine ; extra == "test"
Project-URL: Documentation, https://github.com/karthagokul/pypersonality#readme
Project-URL: Source, https://github.com/karthagokul/pypersonality
Project-URL: Tracker, https://github.com/karthagokul/pypersonality/issues
Provides-Extra: spark
Provides-Extra: test


# pypersonality

Written in python , Module to identify the personality type from a text given using (MBTI) Myers-Briggs Personality Type Dataset.

### How to use it?
Install the module from pypi https://pypi.org/project/pypersonality/

    pip install pypersonality

import the module

    from pypersonality.personality import PyPersonality

Now you have a text file source, open and read the strings ,read_File_as_list is a function which splits the text files into strings.

    dictlist = [{}]
    data = read_file_as_list("demo_text/modi.txt")
    for line in data:
	    dictlist.append(p.get_personality(line))

Now the dictlist list has all the results, May be we need to combine all the dicontry entries

    final_results = {}
    for dictionary in dictlist:
    for key, value in dictionary.items():
    if key in final_results:
    final_results[key] = value + final_results[key]
    else:
    final_results[key] = value

the final_results has the personality types identified with the weightage
