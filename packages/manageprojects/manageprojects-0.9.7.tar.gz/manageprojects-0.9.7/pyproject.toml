[project]
name = "manageprojects"
dynamic = ["version"]
description = "Manage Python / Django projects"
readme = "README.md"
authors = [
    {name = 'Jens Diemer', email = 'mamageprojects@jensdiemer.de'}
]
requires-python = ">=3.9,<4"
dependencies = [
    "cookiecutter",
    "tomlkit",
    "bx_py_utils",  # https://github.com/boxine/bx_py_utils
    "click",  # https://github.com/pallets/click/
    "rich-click",  # https://github.com/ewels/rich-click
    "rich",  # https://github.com/Textualize/rich
    "packaging",  # https://github.com/pypa/packaging
    "darker>=1.7",  # https://github.com/akaihola/darker
    "autopep8",  # https://github.com/hhatto/autopep8
    "pyupgrade",  # https://github.com/asottile/pyupgrade
    "isort",  # https://github.com/pycqa/isort
    "flynt",  # https://github.com/ikamensh/flynt
    "flake8",  # https://github.com/pycqa/flake8
    "pyflakes",  # https://github.com/PyCQA/pyflakes
    "codespell",  # https://github.com/codespell-project/codespell
    "EditorConfig",  # https://github.com/editorconfig/editorconfig-core-py
    "mypy",  # https://github.com/python/mypy
    "safety",  # https://github.com/pyupio/safety
    "tomli",  # https://github.com/hukkin/tomli
    #
    # tomli only needed for Python <3.11, but see bug:
    # https://github.com/pypa/pip/issues/9644#issuecomment-1456583402
    #"tomli;python_version<\"3.11\"",  # https://github.com/hukkin/tomli
]
[project.optional-dependencies]
dev = [
    "pip-tools",  # https://github.com/jazzband/pip-tools/
    "tox>=4.4.5",  # https://github.com/tox-dev/tox
    "coveralls",  # https://github.com/TheKevJames/coveralls-python
    "tomli",  # https://github.com/hukkin/tomli
    "twine",  # https://github.com/pypa/twine
    "poetry-publish",  # https://github.com/jedie/poetry-publish
    "pdoc", # Because: https://github.com/boxine/bx_py_utils/issues/157
]

[project.urls]
Documentation = "https://github.com/jedie/manageprojects"
Source = "https://github.com/jedie/manageprojects"

[project.scripts]
manageprojects = "manageprojects.__main__:main"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["manageprojects*"]

[tool.setuptools.dynamic]
version = {attr = "manageprojects.__version__"}


[tool.darker]
src = ['.']
revision = "origin/main..."
line_length = 119
verbose = true
color = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
flynt = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile='black'
skip_glob=['.*', '*/htmlcov/*']
known_first_party=['manageprojects']
line_length=119
lines_after_imports=2


[tool.coverage.run]
branch = true
parallel = true
source = ['.']
command_line = '-m unittest --verbose --locals --buffer'

[tool.coverage.report]
omit = ['.*', '*/tests/*']
skip_empty = true
fail_under = 30
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]


[tool.tox]  # https://tox.wiki/en/latest/config.html#pyproject-toml
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{311,310,39}
skip_missing_interpreters = True

[testenv]
passenv = *
skip_install = true
commands_pre =
    pip install -U pip-tools
    pip-sync requirements.dev.txt
commands =
    {envpython} -m coverage run --context='{envname}'
    {envpython} -m coverage combine --append
    {envpython} -m coverage xml
    {envpython} -m coverage report
"""


[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = [
    '.venv',
    'tests',
    'manageprojects/project_templates',
]


[manageprojects] # https://github.com/jedie/manageprojects
initial_revision = "8438598"
initial_date = 2022-11-20T20:01:37+01:00
cookiecutter_template = "https://github.com/jedie/cookiecutter_templates"
cookiecutter_directory = "piptools-python"
applied_migrations = [
    "cf44769", # 2023-01-11T08:15:06+01:00
    "cd164cd", # 2023-02-18T11:55:57+01:00
    "d970456", # 2023-02-20T16:19:35+01:00
    "80d0a0c", # 2023-03-06T17:52:14+01:00
    "04d5a25", # 2023-03-07T16:25:36+01:00
    "be96b03", # 2023-03-17T08:17:11+01:00
]

[manageprojects.cookiecutter_context.cookiecutter]
full_name = "Jens Diemer"
github_username = "jedie"
author_email = "mamageprojects@jensdiemer.de"
package_name = "manageprojects"
package_version = "0.3.2"
package_description = "Manage Python / Django projects"
package_url = "https://github.com/jedie/manageprojects"
issues_url = "https://github.com/jedie/manageprojects/issues"
license = "GPL-3.0-or-later"
_template = "https://github.com/jedie/cookiecutter_templates"
