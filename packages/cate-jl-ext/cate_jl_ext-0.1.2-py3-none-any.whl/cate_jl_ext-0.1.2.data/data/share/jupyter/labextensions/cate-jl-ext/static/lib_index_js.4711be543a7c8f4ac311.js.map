{"version":3,"file":"lib_index_js.4711be543a7c8f4ac311.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAA+C;AACS;AACD;AAEvD,MAAM,aAAa,GAAG,MAAM,CAAC;AAyBtB,SAAS,aAAa,CAAC,UAAkB;IAC5C,OAAO,GAAG,UAAU,oBAAoB,UAAU,EAAE,CAAC;AACzD,CAAC;AAED;;GAEG;AACI,KAAK,UAAU,UAAU,CAAC,QAAoC;IACjE,MAAM,OAAO,GAAG;QACZ,MAAM,EAAE,KAAK;QACb,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;SACrC;QACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;YACjB,OAAO,EAAE,QAAQ,CAAC,OAAO;SAC5B,CAAC;KACL,CAAC;IACF,OAAO,OAAO,CAAU,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC1D,CAAC;AAED;;GAEG;AACI,KAAK,UAAU,SAAS,CAAC,cAAuB,EACvB,QAAoC;IAChE,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC,CAAC;IAChD,mBAAmB,CAAC,WAAW,CAAC,CAAC;IAEjC,MAAM,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC;IACpC,MAAM,SAAS,GAAG,CAAC,cAAc;WACX,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;WAC3C,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC,GAAG,QAAQ,CAAC,OAAO,SAAS,UAAU,EAAE;QAC1C,CAAC,CAAC,oBAAoB,UAAU,EAAE,CAAC;IAEvC,MAAM,eAAe,GAAG,KAAK,IAAkB,EAAE;QAC7C,MAAM,WAAW,GAAG,MAAM,cAAc,EAAE,CAAC;QAC3C,mBAAmB,CAAC,WAAW,CAAC,CAAC;QACjC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;YACd,MAAM,IAAI,gFAA8B,CAAC,QAAQ,CAAC,CAAC;SACtD;QACD,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,SAAS,CAAC,CAAC;IACjD,MAAM,cAAc,GAAG,MAAM,gDAAS,CAAC,eAAe,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IACnE,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,cAAc,CAAC,CAAC;IAEvD,OAAO;QACH,GAAG,EAAE,SAAS;QACd,KAAK,EAAE,WAAW;QAClB,QAAQ,EAAE,cAAc;KAC3B,CAAC;AACN,CAAC;AAGD,SAAS,mBAAmB,CAAC,WAAwB;IACjD,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,WAAW,CAAC,CAAC;IACxD,IAAI,WAAW,CAAC,MAAM,KAAK,SAAS,EAAE;QAClC,OAAO,CAAE,MAAM;KAClB;IACD,IAAI,WAAW,CAAC,MAAM,KAAK,UAAU;WAC9B,WAAW,CAAC,MAAM,KAAK,YAAY,EAAE;QACxC,OAAO,CAAC,IAAI,CAAC,gCAAgC,EAAE,WAAW,CAAC,CAAC;QAC5D,OAAO,CAAE,MAAM;KAClB;IACD,IAAI,OAAO,GAAG,+DAA+D,CAAC;IAC9E,IAAI,OAAO,WAAW,CAAC,MAAM,KAAK,QAAQ,EAAE;QACxC,OAAO,IAAI,YAAY,WAAW,CAAC,MAAM,IAAI,CAAC;KACjD;IACD,IAAI,OAAO,WAAW,CAAC,UAAU,KAAK,QAAQ,EAAE;QAC5C,OAAO,IAAI,aAAa,WAAW,CAAC,UAAU,IAAI,CAAC;KACtD;IACD,qCAAqC;IACrC,IAAI,OAAO,WAAW,CAAC,MAAM,KAAK,QAAQ,EAAE;QACxC,OAAO,IAAI,WAAW,WAAW,CAAC,MAAM,IAAI,CAAC;KAChD;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;QACpC,OAAO,IAAI,kBAAkB,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;KACnE;IACD,MAAM,IAAI,qDAAkB,CAAC,OAAO,CAAC,CAAC;AAC1C,CAAC;AAGD;;GAEG;AACH,KAAK,UAAU,WAAW,CAAC,QAAqC;IAC5D,OAAO,OAAO,CAAc,QAAQ,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,EAAE,QAAQ,CAAC,CAAC;AACrE,CAAC;AAED;;GAEG;AACH,KAAK,UAAU,cAAc,CAAC,QAAqC;IAC/D,OAAO,OAAO,CAAc,QAAQ,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,EAAE,QAAQ,CAAC,CAAC;AACrE,CAAC;AAGD;;;;;;;GAOG;AACI,KAAK,UAAU,OAAO,CACzB,QAAQ,GAAG,EAAE,EACb,OAAoB,EAAE,EACtB,QAAqC;IAErC,QAAQ,GAAG,QAAQ,IAAI,+EAA6B,EAAE,CAAC;IAEvD,MAAM,UAAU,GAAG,8DAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;IAE1E,IAAI,QAAkB,CAAC;IACvB,IAAI;QACA,QAAQ,GAAG,MAAM,8EAA4B,CAAC,UAAU,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KAC7E;IAAC,OAAO,KAAK,EAAE;QACZ,MAAM,IAAI,+EAA6B,CAAC,KAAK,CAAC,CAAC;KAClD;IAED,IAAI,IAAI,GAAQ,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IACtC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QACjB,IAAI;YACA,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC3B;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,CAAC,IAAI,CAAC,2BAA2B,EAAE,QAAQ,CAAC,CAAC;SACvD;KACJ;IAED,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;QACd,MAAM,IAAI,gFAA8B,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC;KAC5E;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvKiG;AAC/C;AACF;AACc;AACP;AACgD;AAC/D;AACkC;AAG3E,MAAM,eAAe,GAAG,2BAA2B,CAAC;AAEpD,KAAK,UAAU,QAAQ,CACnB,GAAoB,EACpB,eAAwC,EACxC,OAA+B,EAC/B,QAA0B,EAC1B,QAAgC;IAEhC,OAAO,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;IAC9D,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,eAAe,CAAC,CAAC;IACtD,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;IAC7C,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IACxC,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC;IAC9C,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,wEAAqB,EAAE,CAAC,CAAC;IACrD,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE,sEAAmB,EAAE,CAAC,CAAC;IACjD,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,yEAAsB,EAAE,CAAC,CAAC;IACvD,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,wEAAqB,EAAE,CAAC,CAAC;IAErD,MAAM,cAAc,GAAG,+EAA6B,EAAE,CAAC;IACvD,sDAAsD;IAEtD,IAAI,cAAc,GAAY,KAAK,CAAC;IACpC,IAAI;QACA,MAAM,OAAO,GAAG,MAAM,gDAAU,CAAC,cAAc,CAAC,CAAC;QACjD,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;KACxC;IAAC,OAAO,KAAK,EAAE;QACZ,MAAM,sEAAgB,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;QAC/C,OAAO;KACV;IAED,IAAI,eAAe,KAAK,IAAI,EAAE;QAC1B,IAAI,QAAoC,CAAC;QACzC,IAAI;YACA,QAAQ,GAAG,MAAM,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACjD,OAAO,CAAC,KAAK,CACT,8BAA8B,EAC9B,QAAQ,CAAC,SAAS,CACrB,CAAC;SACL;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,CAAC,KAAK,CACT,0CAA0C,EAC1C,KAAK,CACR,CAAC;SACL;KACJ;IAGD,IAAI,MAAM,GAA0B,IAAI,CAAC;IACzC,IAAI,OAAO,GAAyC,IAAI,CAAC;IAEzD,6BAA6B;IAC7B,MAAM,SAAS,GAAG,kBAAkB,CAAC;IAErC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,EAAE;QAC/B,KAAK,EAAE,UAAU;QACjB,SAAS,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;QAChE,OAAO,EAAE,KAAK,IAAI,EAAE;YAChB,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,UAAU,EAAE;gBACtC,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;gBAE5D,IAAI,YAA0B,CAAC;gBAC/B,IAAI;oBACA,sDAAsD;oBACtD,YAAY,GAAG,MAAM,+CAAS,CAAC,cAAc,EAAE,cAAc,CAAC;iBACjE;gBAAC,OAAO,KAAK,EAAE;oBACZ,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;oBAC9B,MAAM,sEAAgB,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;oBAC/C,OAAO;iBACV;gBAED,IAAI,UAAU,GAAG,mDAAa,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACjD,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;gBAEzC,wDAAwD;gBACxD,MAAM,OAAO,GAAG,IAAI,mDAAM,EAAE,CAAC;gBAC7B,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAChD,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;gBACnC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;gBAC5B,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gBAC7B,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gBAC7B,MAAM,CAAC,GAAG,GAAG,UAAU,CAAC;gBACxB,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAEjC,MAAM,GAAG,IAAI,gEAAc,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,EAAE,GAAG,UAAU,CAAC;gBACvB,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;gBAChC,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;aAChC;YACD,IAAI,OAAO,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBAC1C,sDAAsD;gBACtD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBAC1B,OAAO,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;gBAC3D,CAAC,CAAC,CAAC;aACN;YACD,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;gBACpB,4DAA4D;gBAC5D,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;aACjC;YACD,sBAAsB;YACtB,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACtC,CAAC;KACJ,CAAC,CAAC;IAEH,IAAI,OAAO,KAAK,IAAI,EAAE;QAClB,kCAAkC;QAClC,OAAO,CAAC,OAAO,CAAC;YACZ,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,OAAO;SACpB,CAAC,CAAC;KACN;IAED,IAAI,QAAQ,KAAK,IAAI,EAAE;QACnB,mCAAmC;QACnC,QAAQ,CAAC,GAAG,CAAC;YACT,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,CAAC;SACV,CAAC,CAAC;KACN;IAED,IAAI,QAAQ,KAAK,IAAI,EAAE;QACnB,qCAAqC;QACrC,OAAO,GAAG,IAAI,+DAAa,CAAiB;YACxC,SAAS,EAAE,MAAM;SACpB,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE;YACtB,OAAO,EAAE,SAAS;YAClB,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM;SACrB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACT,OAAO,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;KACN;IAED,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;AAClE,CAAC;AAED;;GAEG;AACH,MAAM,MAAM,GAAgC;IACxC,EAAE,EAAE,oBAAoB;IACxB,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE;QACN,yEAAgB;QAChB,iEAAe;QACf,2DAAS;QACT,oEAAe;KAClB;IACD,QAAQ;CACX,CAAC;AAEF,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;AClKtB;;;;;;;;;;;;;;;;;;;;;;GAsBG;AAQH;;GAEG;AACI,MAAM,kBAAmB,SAAQ,KAAK;IAIzC,YAAY,OAAgB,EAAE,KAAa;QACvC,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;CACJ;AAGD;;;;;;;;;GASG;AACI,KAAK,UAAU,SAAS,CAAI,UAA4B,EAAE,OAAe,EAAE,QAAgB;IAC9F,MAAM,KAAK,GAAG,OAAO,GAAG,QAAQ,CAAC;IAEjC,MAAM,OAAO,GAAe,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;QACnD,OAAO,CAAC,KAAK,CAAC,YAAY,UAAU,CAAC,IAAI,eAAe,KAAK,IAAI,QAAQ,GAAG,CAAC;QAC7E,UAAU,EAAE;aACP,IAAI,CAAC,KAAK,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC;QAClB,CAAC,CAAC;aACD,KAAK,CAAC,KAAK,CAAC,EAAE;YACX,IAAI,KAAK,YAAY,kBAAkB,EAAE;gBACrC,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC;aAChC;iBAAM,IAAI,KAAK,IAAI,QAAQ,EAAE;gBAC1B,MAAM,CAAC,KAAK,CAAC,CAAC;aACjB;iBAAM;gBACH,cAAc,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;aAC9C;QACL,CAAC,CAAC,CAAC;IACX,CAAC,CAAC;IAEF,MAAM,cAAc,GAAe,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;QAC1D,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC;IAC5D,CAAC,CAAC;IAEF,OAAO,IAAI,OAAO,CACd,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,cAAc,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,CAC1D,CAAC;AACN,CAAC","sources":["webpack://cate-jl-ext/./src/api.ts","webpack://cate-jl-ext/./src/index.ts","webpack://cate-jl-ext/./src/util.ts"],"sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { callUntil, UnrecoverableError } from \"./util\";\n\nconst API_NAMESPACE = \"cate\";\n\nexport interface LabInfo {\n    lab_url: string;\n    has_proxy?: boolean;\n}\n\nexport interface ServerState {\n    port: number;\n    pid: number;\n    status: string;\n    cmdline: string[];\n    name: string | null;\n    username: string | null;\n    returncode: number | null;\n    stdout: string | null;\n    stderr: string | null;\n}\n\nexport interface ServerStatus {\n    url: string;\n    state: ServerState;\n    response: any;\n}\n\nexport function getCateAppUrl(serviceUrl: string) {\n    return `${serviceUrl}/app/?serviceUrl=${serviceUrl}`;\n}\n\n/**\n * Set lab information.\n */\nexport async function setLabInfo(settings: ServerConnection.ISettings): Promise<LabInfo> {\n    const request = {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            lab_url: settings.baseUrl\n        })\n    };\n    return callAPI<LabInfo>('labinfo', request, settings);\n}\n\n/**\n * Start Cate server and return, once it is ready to serve.\n */\nexport async function getServer(hasServerProxy: boolean,\n                                settings: ServerConnection.ISettings): Promise<ServerStatus> {\n    const serverState = await startServer(settings);\n    assertServerStateOk(serverState);\n\n    const serverPort = serverState.port;\n    const serverUrl = (hasServerProxy\n                       && settings.baseUrl.indexOf(\"localhost\") == -1\n                       && settings.baseUrl.indexOf(\"127.0.0.1\") == -1)\n        ? `${settings.baseUrl}proxy/${serverPort}`\n        : `http://localhost:${serverPort}`;\n\n    const fetchServerInfo = async (): Promise<any> => {\n        const serverState = await getServerState();\n        assertServerStateOk(serverState);\n        const response = await fetch(serverUrl);\n        if (!response.ok) {\n            throw new ServerConnection.ResponseError(response);\n        }\n        return response.json();\n    }\n\n    console.debug('Trying to connect to', serverUrl);\n    const serverResponse = await callUntil(fetchServerInfo, 10000, 10);\n    console.debug('Cate server response:', serverResponse);\n\n    return {\n        url: serverUrl,\n        state: serverState,\n        response: serverResponse,\n    };\n}\n\n\nfunction assertServerStateOk(serverState: ServerState) {\n    console.debug(\"cate-jl-ext server state:\", serverState);\n    if (serverState.status === \"running\") {\n        return;  // Ok!\n    }\n    if (serverState.status === \"sleeping\"\n        || serverState.status === \"disk-sleep\") {\n        console.warn(\"Cate server in sleeping state:\", serverState);\n        return;  // Ok!\n    }\n    let message = \"Cate server could not be started or terminated unexpectedly. \";\n    if (typeof serverState.stderr === \"string\") {\n        message += `Message: ${serverState.stderr}. `;\n    }\n    if (typeof serverState.returncode === \"number\") {\n        message += `Exit code ${serverState.returncode}. `;\n    }\n    // noinspection SuspiciousTypeOfGuard\n    if (typeof serverState.status === \"string\") {\n        message += `Status: ${serverState.status}. `;\n    }\n    if (Array.isArray(serverState.cmdline)) {\n        message += `Command-line: \"${serverState.cmdline.join(\" \")}\". `;\n    }\n    throw new UnrecoverableError(message);\n}\n\n\n/**\n * Start Cate server.\n */\nasync function startServer(settings?: ServerConnection.ISettings): Promise<ServerState> {\n    return callAPI<ServerState>('server', {method: \"PUT\"}, settings);\n}\n\n/**\n * Get Cate server state.\n */\nasync function getServerState(settings?: ServerConnection.ISettings): Promise<ServerState> {\n    return callAPI<ServerState>('server', {method: \"GET\"}, settings);\n}\n\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @param settings Server connection settings\n * @returns The response body interpreted as JSON\n */\nexport async function callAPI<T>(\n    endPoint = '',\n    init: RequestInit = {},\n    settings?: ServerConnection.ISettings\n): Promise<T> {\n    settings = settings || ServerConnection.makeSettings();\n\n    const requestUrl = URLExt.join(settings.baseUrl, API_NAMESPACE, endPoint);\n\n    let response: Response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    } catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n\n    let data: any = await response.text();\n    if (data.length > 0) {\n        try {\n            data = JSON.parse(data);\n        } catch (error) {\n            console.warn('Not a JSON response body.', response);\n        }\n    }\n\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message || data);\n    }\n\n    return data;\n}\n","import { ILayoutRestorer, JupyterFrontEnd, JupyterFrontEndPlugin } from \"@jupyterlab/application\";\nimport { PageConfig } from '@jupyterlab/coreutils';\nimport { ILauncher } from \"@jupyterlab/launcher\";\nimport { ISettingRegistry } from \"@jupyterlab/settingregistry\";\nimport { ServerConnection } from '@jupyterlab/services';\nimport { ICommandPalette, MainAreaWidget, showErrorMessage, WidgetTracker } from \"@jupyterlab/apputils\";\nimport { Widget } from \"@lumino/widgets\";\nimport { getServer, getCateAppUrl, ServerStatus, setLabInfo } from './api';\n\n\nconst ERROR_BOX_TITLE = \"Cate JupyterLab Extension\";\n\nasync function activate(\n    app: JupyterFrontEnd,\n    settingRegistry: ISettingRegistry | null,\n    palette: ICommandPalette | null,\n    launcher: ILauncher | null,\n    restorer: ILayoutRestorer | null\n) {\n    console.debug(\"Activating JupyterLab extension cate-jl-ext:\");\n    console.debug(\"  ISettingRegistry:\", settingRegistry);\n    console.debug(\"  ICommandPalette:\", palette);\n    console.debug(\"  ILauncher:\", launcher);\n    console.debug(\"  ILayoutRestorer:\", restorer);\n    console.debug(\"  baseUrl:\", PageConfig.getBaseUrl());\n    console.debug(\"  wsUrl:\", PageConfig.getWsUrl());\n    console.debug(\"  shareUrl:\", PageConfig.getShareUrl());\n    console.debug(\"  treeUrl:\", PageConfig.getTreeUrl());\n\n    const serverSettings = ServerConnection.makeSettings();\n    // console.debug(\"  serverSettings:\", serverSettings);\n\n    let hasServerProxy: boolean = false;\n    try {\n        const labInfo = await setLabInfo(serverSettings);\n        hasServerProxy = !!labInfo.has_proxy;\n    } catch (error) {\n        await showErrorMessage(ERROR_BOX_TITLE, error);\n        return;\n    }\n\n    if (settingRegistry !== null) {\n        let settings: ISettingRegistry.ISettings;\n        try {\n            settings = await settingRegistry.load(plugin.id);\n            console.debug(\n                \"cate-jl-ext settings loaded:\",\n                settings.composite\n            );\n        } catch (error) {\n            console.error(\n                \"Failed to load settings for cate-jl-ext.\",\n                error\n            );\n        }\n    }\n\n\n    let widget: MainAreaWidget | null = null;\n    let tracker: WidgetTracker<MainAreaWidget> | null = null;\n\n    // Add an application command\n    const commandID = \"cate:openCateApp\";\n\n    app.commands.addCommand(commandID, {\n        label: \"Cate App\",\n        iconClass: (args: any) => (args[\"isPalette\"] ? \"\" : \"cate-icon\"),\n        execute: async () => {\n            if (widget === null || widget.isDisposed) {\n                console.debug(\"Creating new JupyterLab widget cate-jl-ext\");\n\n                let serverStatus: ServerStatus;\n                try {\n                    // TODO (forman): show indicator while starting server\n                    serverStatus = await getServer(hasServerProxy, serverSettings)\n                } catch (error) {\n                    console.error(\"Argh:\", error);\n                    await showErrorMessage(ERROR_BOX_TITLE, error);\n                    return;\n                }\n\n                let cateAppUrl = getCateAppUrl(serverStatus.url);\n                console.debug(\"cateAppUrl:\", cateAppUrl);\n\n                // Create a blank content widget inside a MainAreaWidget\n                const content = new Widget();\n                const iframe = document.createElement('iframe');\n                iframe.style.position = \"absolute\";\n                iframe.style.width = \"100%\";\n                iframe.style.height = \"100%\";\n                iframe.style.border = \"none\";\n                iframe.src = cateAppUrl;\n                content.node.appendChild(iframe);\n\n                widget = new MainAreaWidget({content});\n                widget.id = \"cate-app\";\n                widget.title.label = \"Cate App\";\n                widget.title.closable = true;\n            }\n            if (tracker !== null && !tracker.has(widget)) {\n                // Track the state of the widget for later restoration\n                tracker.add(widget).then(() => {\n                    console.debug('JupyterLab widget cate-jl-ext stored!');\n                });\n            }\n            if (!widget.isAttached) {\n                // Attach the widget to the main work area if it's not there\n                app.shell.add(widget, \"main\");\n            }\n            // Activate the widget\n            app.shell.activateById(widget.id);\n        }\n    });\n\n    if (palette !== null) {\n        // Add the command to the palette.\n        palette.addItem({\n            command: commandID,\n            category: \"Other\"\n        });\n    }\n\n    if (launcher !== null) {\n        // Add the command to the launcher.\n        launcher.add({\n            command: commandID,\n            category: \"Other\",\n            rank: 0\n        });\n    }\n\n    if (restorer !== null) {\n        // Track and restore the widget state\n        tracker = new WidgetTracker<MainAreaWidget>({\n            namespace: \"cate\"\n        });\n        restorer.restore(tracker, {\n            command: commandID,\n            name: () => \"cate\"\n        }).then(() => {\n            console.debug('JupyterLab widget cate-jl-ext restored!');\n        });\n    }\n\n    console.log('JupyterLab extension cate-jl-ext is activated!');\n}\n\n/**\n * Initialization data for the cate-jl-ext extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n    id: \"cate-jl-ext:plugin\",\n    autoStart: true,\n    optional: [\n        ISettingRegistry,\n        ICommandPalette,\n        ILauncher,\n        ILayoutRestorer\n    ],\n    activate\n};\n\nexport default plugin;\n\n\n\n","/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2019-2023 by the Cate development team and contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is furnished to do\n * so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\ntype Handler<T> = (\n    resolve: (value: T) => any,\n    reject: (reason: any) => void,\n    count: number\n) => void;\n\n/**\n * Throw this error, if you want `callUntil()` to exit immediately.\n */\nexport class UnrecoverableError extends Error {\n\n    readonly error?: Error;\n\n    constructor(message?: string, error?: Error) {\n        super(message);\n        this.error = error;\n    }\n}\n\n\n/**\n * Call asynchronous function `fetchValue` until it returns a value without throwing an exception.\n * If it throws an exception, it will be executed after a delay of `timeout / maxCount`.\n * This is repeated until `maxCount` is reached or a `UnrecoverableError` is thrown.\n * Eventually, the last exception will be thrown.\n *\n * @param fetchValue The asynchronous function to be called.\n * @param timeout Overall timeout in milliseconds.\n * @param maxCount Maximum number of failures.\n */\nexport async function callUntil<T>(fetchValue: () => Promise<T>, timeout: number, maxCount: number): Promise<T> {\n    const delay = timeout / maxCount;\n\n    const handler: Handler<T> = (resolve, reject, count) => {\n        console.debug(`Fetching ${fetchValue.name}() (attempt ${count}/${maxCount})`)\n        fetchValue()\n            .then(value => {\n                resolve(value)\n            })\n            .catch(error => {\n                if (error instanceof UnrecoverableError) {\n                    reject(error.error || error);\n                } else if (count >= maxCount) {\n                    reject(error);\n                } else {\n                    delayedHandler(resolve, reject, count + 1);\n                }\n            });\n    };\n\n    const delayedHandler: Handler<T> = (resolve, reject, count) => {\n        setTimeout(() => handler(resolve, reject, count), delay)\n    };\n\n    return new Promise(\n        (resolve, reject) => delayedHandler(resolve, reject, 1)\n    );\n}\n\n\n\n"],"names":[],"sourceRoot":""}