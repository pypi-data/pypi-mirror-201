
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right,nonassoc:nonassoc?leftORleftANDleftCMP_OPnonassocNOTleftINleftRELATION_DEFTYPEDEF_INNEROPERAND_LISTEMPTYNS_REFVAR_REFMAP_LOOKUPleftCIDIDleft([leftMLSAND AS CID CMP_OP DEFINED DICT ELIF ELSE END ENTITY EXTENDS FALSE FLOAT FOR ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS NOT NULL OR PARENTS PEQ REGEX REL RSTRING SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : head bodyhead : %prec EMPTYhead : MLSbody : top_stmt bodybody : emptytop_stmt : entity_def\n    | implement_def\n    | implementation_def\n    | relation\n    | statement\n    | typedef\n    | index\n    | importempty : %prec EMPTYimport : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n    | for\n    | if\n    | expressionstmt_list : statement stmt_liststmt_list : emptyassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF if_body ENDif_body : expression \':\' stmt_list if_nextif_next : emptyif_next : ELSE \':\' stmt_listif_next : ELIF if_bodyentity_def : ENTITY CID \':\' entity_body_outerentity_def : ENTITY ID \':\' entity_body_outerentity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outerentity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outerentity_body_outer : MLS entity_body ENDentity_body_outer : entity_body ENDentity_body_outer : ENDentity_body_outer : MLS ENDentity_body : entity_body attrentity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n    | attr_base_type \'?\'attr_type : attr_type_opt\n    | attr_type_multi\n    | attr_base_typeattr : attr_type CID empty\n    | attr_type CID \'=\' constant\n    | attr_type CID \'=\' constant_list\n    | attr_type CID \'=\' UNDEFattr : attr_type IDattr : attr_type ID \'=\' constant\n    | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT empty CID empty\n    | DICT empty CID \'=\' map_def\n    | DICT empty CID \'=\' NULL\n    | DICT \'?\' CID empty\n    | DICT \'?\'  CID \'=\' map_def\n    | DICT \'?\'  CID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_ns_list : ns_refimplement_ns_list : PARENTSimplement_ns_list : implement_ns_list \',\' implement_ns_listimplement_def : IMPLEMENT class_ref USING implement_ns_list empty\n    | IMPLEMENT class_ref USING implement_ns_list MLSimplement_def : IMPLEMENT class_ref USING implement_ns_list WHEN expression empty\n    | IMPLEMENT class_ref USING implement_ns_list WHEN expression MLSimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : implementation_head blockimplementation_head : \':\'implementation_head : \':\' MLSblock : stmt_list ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID MLSrelation : relation_def MLSrelation : relation_def %prec RELATION_DEFrelation_def : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi REL class_refrelation_def : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\'multi : \'[\' INT \':\' \']\'multi : \'[\' INT \':\' INT \']\'multi : \'[\'  \':\' INT \']\'typedef : typedef_inner %prec TYPEDEF_INNERtypedef : typedef_inner MLStypedef_inner : TYPEDEF ID AS ns_ref MATCHING expressiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\'expression : boolean_expression\n    | constant\n    | function_call\n    | var_ref %prec VAR_REF\n    | constructor\n    | list_def\n    | map_def\n    | map_lookup %prec MAP_LOOKUP\n    | index_lookup\n    | conditional_expressionexpression : \'(\' expression \')\'boolean_expression : expression CMP_OP expression\n    | expression IN expression\n    | expression AND expression\n    | expression OR expressionboolean_expression : NOT expressionboolean_expression : var_ref \'.\' ID IS DEFINEDboolean_expression : ID IS DEFINEDboolean_expression : map_lookup IS DEFINEDoperand : expressionmap_lookup : attr_ref \'[\' operand \']\'\n    | var_ref \'[\' operand \']\'\n    | map_lookup \'[\' operand \']\'constructor : class_ref \'(\' param_list \')\'function_call : ns_ref \'(\' function_param_list \')\'function_call : attr_ref \'(\' function_param_list \')\'list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_list\n    | STRING \':\' operand empty pair_list_emptypair_list : pair_list_empty\n    pair_list_empty : emptymap_def : \'{\' pair_list \'}\'index_lookup : class_ref \'[\' param_list \']\'index_lookup : attr_ref \'[\' param_list \']\'conditional_expression : expression \'?\' expression \':\' expressionconstant : INT\n    | FLOAT\n    constant : NULLconstant : REGEXconstant : TRUEconstant : FALSEconstant : STRINGconstant : RSTRINGconstant : MLSconstant_list : \'[\' constants \']\'constants : constantconstants :constants : constant \',\' constantswrapped_kwargs : \'*\' \'*\' operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n    param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n    | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n    function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n    | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list : %prec OPERAND_LISTvar_ref : attr_ref %prec VAR_REFattr_ref : var_ref \'.\' IDvar_ref : ns_ref %prec NS_REFclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref : var_ref \'.\' CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : ID'
    
_lr_action_items = {'ENTITY':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,113,127,128,129,130,135,140,141,149,150,151,152,154,156,163,165,167,170,182,184,185,186,192,197,203,204,208,214,216,218,219,220,224,225,239,240,244,253,254,258,262,271,280,283,284,285,288,289,290,291,292,295,299,316,317,318,319,322,332,337,338,],[-2,15,-3,15,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-172,-82,-93,-100,-172,-163,-161,-15,-112,-116,-114,-108,-109,-110,-111,-107,-165,-171,-166,-162,-23,-24,-26,-115,-123,-128,-31,-37,-32,-14,-68,-69,-120,-129,-16,-121,-118,-119,-95,-122,-117,-130,-38,-36,-71,-72,-88,-131,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPLEMENT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,113,127,128,129,130,135,140,141,149,150,151,152,154,156,163,165,167,170,182,184,185,186,192,197,203,204,208,214,216,218,219,220,224,225,239,240,244,253,254,258,262,271,280,283,284,285,288,289,290,291,292,295,299,316,317,318,319,322,332,337,338,],[-2,18,-3,18,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-172,-82,-93,-100,-172,-163,-161,-15,-112,-116,-114,-108,-109,-110,-111,-107,-165,-171,-166,-162,-23,-24,-26,-115,-123,-128,-31,-37,-32,-14,-68,-69,-120,-129,-16,-121,-118,-119,-95,-122,-117,-130,-38,-36,-71,-72,-88,-131,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPLEMENTATION':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,113,127,128,129,130,135,140,141,149,150,151,152,154,156,163,165,167,170,182,184,185,186,192,197,203,204,208,214,216,218,219,220,224,225,239,240,244,253,254,258,262,271,280,283,284,285,288,289,290,291,292,295,299,316,317,318,319,322,332,337,338,],[-2,22,-3,22,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-172,-82,-93,-100,-172,-163,-161,-15,-112,-116,-114,-108,-109,-110,-111,-107,-165,-171,-166,-162,-23,-24,-26,-115,-123,-128,-31,-37,-32,-14,-68,-69,-120,-129,-16,-121,-118,-119,-95,-122,-117,-130,-38,-36,-71,-72,-88,-131,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'INDEX':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,113,127,128,129,130,135,140,141,149,150,151,152,154,156,163,165,167,170,182,184,185,186,192,197,203,204,208,214,216,218,219,220,224,225,239,240,244,253,254,258,262,271,280,283,284,285,288,289,290,291,292,295,299,316,317,318,319,322,332,337,338,],[-2,29,-3,29,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-172,-82,-93,-100,-172,-163,-161,-15,-112,-116,-114,-108,-109,-110,-111,-107,-165,-171,-166,-162,-23,-24,-26,-115,-123,-128,-31,-37,-32,-14,-68,-69,-120,-129,-16,-121,-118,-119,-95,-122,-117,-130,-38,-36,-71,-72,-88,-131,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IMPORT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,113,127,128,129,130,135,140,141,149,150,151,152,154,156,163,165,167,170,182,184,185,186,192,197,203,204,208,214,216,218,219,220,224,225,239,240,244,253,254,258,262,271,280,283,284,285,288,289,290,291,292,295,299,316,317,318,319,322,332,337,338,],[-2,31,-3,31,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-172,-82,-93,-100,-172,-163,-161,-15,-112,-116,-114,-108,-109,-110,-111,-107,-165,-171,-166,-162,-23,-24,-26,-115,-123,-128,-31,-37,-32,-14,-68,-69,-120,-129,-16,-121,-118,-119,-95,-122,-117,-130,-38,-36,-71,-72,-88,-131,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'CID':([0,2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,20,21,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,87,88,89,90,91,92,96,99,100,101,103,104,110,112,113,115,127,128,129,130,132,133,135,136,137,140,141,149,150,151,152,154,155,156,159,163,164,165,166,167,170,172,173,174,175,176,177,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,221,224,225,229,230,232,233,236,237,239,240,241,243,244,247,248,253,254,255,256,257,258,262,266,268,271,279,280,283,284,285,288,289,290,291,292,294,295,297,299,316,317,318,319,322,332,337,338,],[-2,16,-3,16,-6,-7,-8,-9,-10,-11,-12,-13,58,-164,-172,16,-140,-20,-83,-17,-18,-19,-92,16,16,-163,-100,16,-97,-98,-99,-101,-102,-103,-104,-105,-106,98,-161,16,-132,-133,-134,-135,-136,-137,-138,-139,16,-172,16,16,16,16,16,-82,-93,-100,-172,-163,-161,-15,140,16,149,16,16,16,16,16,16,-112,-159,-116,16,16,-114,149,-108,-109,-110,-111,16,16,-107,149,140,-165,-171,-166,-162,-23,-24,-26,16,-115,16,-123,16,-128,16,-31,-37,227,-14,-45,-46,-47,-41,-32,-14,-68,-69,16,-120,16,16,-129,16,-16,-121,16,-118,16,-100,-163,-119,-95,-122,-117,-130,-158,-38,-36,275,276,-43,-44,16,16,-71,-72,16,16,-88,16,16,-131,-75,16,-77,16,-96,-113,16,16,-35,-42,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,16,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'FOR':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,75,77,78,81,82,83,84,86,101,104,113,127,128,129,130,135,140,141,149,150,151,152,154,155,156,163,165,167,170,182,184,185,186,192,197,203,204,208,210,212,213,214,216,218,219,220,224,225,239,240,244,253,254,255,256,257,258,262,271,280,283,284,285,288,289,290,291,292,294,295,297,299,316,317,318,319,322,332,337,338,],[-2,23,-3,23,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-172,132,-82,-93,-100,-172,-163,-161,-15,-112,-116,-114,-108,-109,-110,-111,-107,-165,-171,-166,-162,-23,-24,-26,23,-115,-123,-128,-31,-37,-32,-14,-68,-69,-120,-129,-16,-121,-118,23,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,-88,-131,-75,23,-77,23,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,23,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'IF':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,113,127,128,129,130,135,140,141,149,150,151,152,154,155,156,163,165,167,170,182,184,185,186,192,197,203,204,208,210,212,213,214,216,218,219,220,224,225,239,240,244,253,254,255,256,257,258,262,271,280,283,284,285,288,289,290,291,292,294,295,297,299,316,317,318,319,322,332,337,338,],[-2,34,-3,34,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-172,-82,-93,-100,-172,-163,-161,-15,-112,-116,-114,-108,-109,-110,-111,-107,-165,-171,-166,-162,-23,-24,-26,34,-115,-123,-128,-31,-37,-32,-14,-68,-69,-120,-129,-16,-121,-118,34,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,-88,-131,-75,34,-77,34,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,34,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'(':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,19,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,79,81,82,83,84,85,86,88,90,91,92,96,99,100,101,104,113,127,128,129,130,133,135,140,141,148,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,217,218,219,220,224,225,239,240,241,244,253,254,255,256,257,258,262,266,268,271,280,283,284,285,288,289,290,291,292,294,295,297,299,316,317,318,319,322,332,337,338,],[-2,30,-3,30,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,68,-140,-20,-83,-17,-18,-19,-92,30,88,-100,30,-97,-98,-99,-101,-102,-103,-104,-105,-106,99,30,-132,-133,-134,-135,-136,-137,-138,-139,30,-172,30,30,30,30,30,-82,-93,134,-100,-172,88,99,68,-15,30,30,30,30,30,30,30,-112,-116,-114,-108,-109,-110,-111,30,-107,-165,-171,-172,-166,-162,-23,-24,-26,30,-115,-123,30,-128,30,-31,-37,-32,-14,-68,-69,30,-120,30,30,-129,30,-16,-121,30,-118,30,-100,88,-119,-95,68,-122,-117,-130,-38,-36,-71,-72,30,-88,-131,-75,30,-77,30,-96,-113,30,30,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,30,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'TYPEDEF':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,101,104,113,127,128,129,130,135,140,141,149,150,151,152,154,156,163,165,167,170,182,184,185,186,192,197,203,204,208,214,216,218,219,220,224,225,239,240,244,253,254,258,262,271,280,283,284,285,288,289,290,291,292,295,299,316,317,318,319,322,332,337,338,],[-2,44,-3,44,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-172,-82,-93,-100,-172,-163,-161,-15,-112,-116,-114,-108,-109,-110,-111,-107,-165,-171,-166,-162,-23,-24,-26,-115,-123,-128,-31,-37,-32,-14,-68,-69,-120,-129,-16,-121,-118,-119,-95,-122,-117,-130,-38,-36,-71,-72,-88,-131,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'ID':([0,2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,64,67,68,69,70,71,72,73,74,77,78,81,82,83,84,86,87,88,89,90,91,92,96,99,100,101,103,104,109,110,111,112,113,114,115,127,128,129,130,132,133,134,135,136,137,138,139,140,141,149,150,151,152,154,155,156,158,159,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,182,184,185,186,191,192,194,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,221,223,224,225,226,227,228,230,231,232,233,235,236,237,238,239,240,241,242,243,244,247,248,253,254,255,256,257,258,259,262,266,268,271,272,275,276,277,279,280,283,284,285,286,288,289,290,291,292,294,295,297,299,302,303,304,306,307,308,309,311,314,315,316,317,318,319,320,321,322,326,327,328,329,330,331,332,335,337,338,],[-2,17,-3,17,-6,-7,-8,-9,-10,-11,-12,-13,59,-164,-172,64,66,-140,-20,75,76,-83,-17,-18,-19,-92,64,82,64,-163,-100,82,-97,-98,-99,-101,-102,-103,-104,-105,-106,97,-161,82,-132,-133,-134,-135,-136,-137,-138,-139,82,-172,118,123,123,82,82,82,82,82,-82,-93,-100,-172,-163,-161,-15,141,148,150,82,82,82,82,148,148,-112,-159,-116,64,64,64,64,-114,64,187,-108,-109,-110,-111,64,82,202,-107,150,141,203,141,-165,-171,-166,-162,-23,-24,-26,82,-115,64,64,-123,82,-128,82,-31,64,64,-37,-40,228,231,-45,-46,-47,-41,-32,-14,-68,-69,82,-120,123,82,82,-129,82,-16,-121,148,-118,82,-100,-163,-119,-95,-122,-117,-130,-158,64,-38,-36,-39,-14,-52,277,-62,-43,-44,64,64,64,64,-71,-72,82,64,64,-88,64,64,-131,-75,82,-77,82,-96,202,-113,82,82,-35,-48,-14,-14,-65,-42,-33,-34,-14,-70,318,-89,-91,-85,-87,-76,-78,-25,82,-94,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-73,-74,-80,-90,333,334,-79,-57,-58,-60,-61,-66,-67,-81,-141,-84,-86,]),'NOT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,113,127,128,129,130,133,135,140,141,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,239,240,241,244,253,254,255,256,257,258,262,266,268,271,280,283,284,285,288,289,290,291,292,294,295,297,299,316,317,318,319,322,332,337,338,],[-2,46,-3,46,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,46,-163,-100,46,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,46,-132,-133,-134,-135,-136,-137,-138,-139,46,-172,46,46,46,46,46,-82,-93,-100,-172,-163,-161,-15,46,46,46,46,46,46,46,-112,-116,-114,-108,-109,-110,-111,46,-107,-165,-171,-166,-162,-23,-24,-26,46,-115,-123,46,-128,46,-31,-37,-32,-14,-68,-69,46,-120,46,46,-129,46,-16,-121,46,-118,46,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,46,-88,-131,-75,46,-77,46,-96,-113,46,46,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,46,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'INT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,113,117,127,128,129,130,133,135,140,141,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,190,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,239,240,241,244,245,253,254,255,256,257,258,262,266,268,271,273,274,280,283,284,285,288,289,290,291,292,294,295,297,299,305,316,317,318,319,322,332,336,337,338,],[-2,47,-3,47,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,47,-163,-100,47,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,47,-132,-133,-134,-135,-136,-137,-138,-139,47,-172,47,47,47,47,47,-82,-93,-100,-172,-163,-161,-15,47,47,47,47,47,47,47,-112,-116,-114,189,-108,-109,-110,-111,47,-107,-165,-171,-166,-162,-23,-24,-26,47,-115,-123,47,-128,47,-31,-37,-32,-14,-68,-69,246,47,-120,47,47,-129,47,-16,-121,47,-118,47,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,47,-88,287,-131,-75,47,-77,47,-96,-113,47,47,-35,47,47,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,47,-94,47,-73,-74,-80,-90,-79,-81,47,-84,-86,]),'FLOAT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,113,127,128,129,130,133,135,140,141,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,239,240,241,244,253,254,255,256,257,258,262,266,268,271,273,274,280,283,284,285,288,289,290,291,292,294,295,297,299,305,316,317,318,319,322,332,336,337,338,],[-2,48,-3,48,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,48,-163,-100,48,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,48,-132,-133,-134,-135,-136,-137,-138,-139,48,-172,48,48,48,48,48,-82,-93,-100,-172,-163,-161,-15,48,48,48,48,48,48,48,-112,-116,-114,-108,-109,-110,-111,48,-107,-165,-171,-166,-162,-23,-24,-26,48,-115,-123,48,-128,48,-31,-37,-32,-14,-68,-69,48,-120,48,48,-129,48,-16,-121,48,-118,48,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,48,-88,-131,-75,48,-77,48,-96,-113,48,48,-35,48,48,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,48,-94,48,-73,-74,-80,-90,-79,-81,48,-84,-86,]),'NULL':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,113,127,128,129,130,133,135,140,141,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,239,240,241,244,253,254,255,256,257,258,262,266,268,271,273,274,278,280,283,284,285,288,289,290,291,292,294,295,297,299,305,310,312,313,316,317,318,319,322,332,336,337,338,],[-2,49,-3,49,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,49,-163,-100,49,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,49,-132,-133,-134,-135,-136,-137,-138,-139,49,-172,49,49,49,49,49,-82,-93,-100,-172,-163,-161,-15,49,49,49,49,49,49,49,-112,-116,-114,-108,-109,-110,-111,49,-107,-165,-171,-166,-162,-23,-24,-26,49,-115,-123,49,-128,49,-31,-37,-32,-14,-68,-69,49,-120,49,49,-129,49,-16,-121,49,-118,49,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,49,-88,-131,-75,49,-77,49,-96,-113,49,49,-35,49,49,315,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,49,-94,49,327,329,331,-73,-74,-80,-90,-79,-81,49,-84,-86,]),'REGEX':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,113,127,128,129,130,133,135,140,141,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,239,240,241,244,253,254,255,256,257,258,262,266,268,271,273,274,280,283,284,285,288,289,290,291,292,294,295,297,299,305,316,317,318,319,322,332,336,337,338,],[-2,50,-3,50,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,50,-163,-100,50,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,50,-132,-133,-134,-135,-136,-137,-138,-139,50,-172,50,50,50,50,50,-82,-93,-100,-172,-163,-161,-15,50,50,50,50,50,50,50,-112,-116,-114,-108,-109,-110,-111,50,-107,-165,-171,-166,-162,-23,-24,-26,50,-115,-123,50,-128,50,-31,-37,-32,-14,-68,-69,50,-120,50,50,-129,50,-16,-121,50,-118,50,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,50,-88,-131,-75,50,-77,50,-96,-113,50,50,-35,50,50,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,50,-94,50,-73,-74,-80,-90,-79,-81,50,-84,-86,]),'TRUE':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,113,127,128,129,130,133,135,140,141,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,239,240,241,244,253,254,255,256,257,258,262,266,268,271,273,274,280,283,284,285,288,289,290,291,292,294,295,297,299,305,316,317,318,319,322,332,336,337,338,],[-2,51,-3,51,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,51,-163,-100,51,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,51,-132,-133,-134,-135,-136,-137,-138,-139,51,-172,51,51,51,51,51,-82,-93,-100,-172,-163,-161,-15,51,51,51,51,51,51,51,-112,-116,-114,-108,-109,-110,-111,51,-107,-165,-171,-166,-162,-23,-24,-26,51,-115,-123,51,-128,51,-31,-37,-32,-14,-68,-69,51,-120,51,51,-129,51,-16,-121,51,-118,51,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,51,-88,-131,-75,51,-77,51,-96,-113,51,51,-35,51,51,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,51,-94,51,-73,-74,-80,-90,-79,-81,51,-84,-86,]),'FALSE':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,113,127,128,129,130,133,135,140,141,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,239,240,241,244,253,254,255,256,257,258,262,266,268,271,273,274,280,283,284,285,288,289,290,291,292,294,295,297,299,305,316,317,318,319,322,332,336,337,338,],[-2,52,-3,52,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,52,-163,-100,52,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,52,-132,-133,-134,-135,-136,-137,-138,-139,52,-172,52,52,52,52,52,-82,-93,-100,-172,-163,-161,-15,52,52,52,52,52,52,52,-112,-116,-114,-108,-109,-110,-111,52,-107,-165,-171,-166,-162,-23,-24,-26,52,-115,-123,52,-128,52,-31,-37,-32,-14,-68,-69,52,-120,52,52,-129,52,-16,-121,52,-118,52,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,52,-88,-131,-75,52,-77,52,-96,-113,52,52,-35,52,52,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,52,-94,52,-73,-74,-80,-90,-79,-81,52,-84,-86,]),'STRING':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,113,127,128,129,130,133,135,140,141,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,239,240,241,244,253,254,255,256,257,258,262,266,268,269,271,273,274,280,283,284,285,288,289,290,291,292,294,295,297,299,305,316,317,318,319,322,332,336,337,338,],[-2,53,-3,53,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,53,-163,-100,53,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,53,-132,-133,-134,-135,-136,-137,-138,-139,53,106,-172,53,53,53,53,53,-82,-93,-100,-172,-163,-161,-15,53,53,53,53,53,53,53,-112,-116,-114,-108,-109,-110,-111,53,-107,-165,-171,-166,-162,-23,-24,-26,53,-115,-123,53,-128,53,-31,-37,-32,-14,-68,-69,53,-120,53,53,-129,53,-16,-121,53,-118,53,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,53,-88,-131,-75,53,-77,53,-96,-113,53,53,106,-35,53,53,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,53,-94,53,-73,-74,-80,-90,-79,-81,53,-84,-86,]),'RSTRING':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,113,127,128,129,130,133,135,140,141,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,239,240,241,244,253,254,255,256,257,258,262,266,268,271,273,274,280,283,284,285,288,289,290,291,292,294,295,297,299,305,316,317,318,319,322,332,336,337,338,],[-2,54,-3,54,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,54,-163,-100,54,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,54,-132,-133,-134,-135,-136,-137,-138,-139,54,-172,54,54,54,54,54,-82,-93,-100,-172,-163,-161,-15,54,54,54,54,54,54,54,-112,-116,-114,-108,-109,-110,-111,54,-107,-165,-171,-166,-162,-23,-24,-26,54,-115,-123,54,-128,54,-31,-37,-32,-14,-68,-69,54,-120,54,54,-129,54,-16,-121,54,-118,54,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,54,-88,-131,-75,54,-77,54,-96,-113,54,54,-35,54,54,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,54,-94,54,-73,-74,-80,-90,-79,-81,54,-84,-86,]),'MLS':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,109,111,113,127,128,129,130,133,135,140,141,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,235,238,239,240,241,244,253,254,255,256,257,258,262,266,268,271,273,274,280,283,284,285,288,289,290,291,292,294,295,297,299,305,316,317,318,319,322,332,336,337,338,],[3,20,-3,20,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,77,-17,-18,-19,78,20,-163,-100,20,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,20,-132,-133,-134,-135,-136,-137,-138,-139,20,-172,20,20,20,20,20,-82,-93,-100,-172,-163,-161,-15,20,20,20,20,20,20,20,-112,-116,168,168,-114,-108,-109,-110,-111,20,-107,-165,-171,-166,-162,-23,-24,-26,20,-115,-123,20,-128,20,-31,-37,-32,240,-68,-69,20,-120,20,20,-129,20,-16,-121,20,-118,20,-100,-163,-119,-95,-122,-117,-130,-38,-36,168,168,-71,-72,20,-88,-131,-75,20,294,20,-96,-113,20,20,-35,20,20,-33,-34,317,-70,-89,-91,-85,-87,-76,-78,-25,20,-94,20,-73,-74,332,-90,-79,-81,20,-84,-86,]),'[':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,19,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,66,70,71,72,73,74,77,78,81,82,83,84,85,86,88,90,91,92,96,99,100,101,104,113,118,127,128,129,130,133,135,140,141,148,149,150,151,152,154,155,156,163,164,165,166,167,170,176,177,182,184,185,186,188,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,239,240,241,244,253,254,255,256,257,258,262,266,268,271,273,274,280,283,284,285,288,289,290,291,292,294,295,297,299,316,317,318,319,322,332,333,334,337,338,],[-2,55,-3,55,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,69,-140,-20,-83,-17,-18,-19,-92,55,-163,92,55,-97,-98,-99,-101,-102,-103,96,-105,-106,100,55,-132,-133,-134,-135,-136,-137,-138,-139,55,-172,117,55,55,55,55,55,-82,-93,92,-172,-163,100,69,-15,55,55,55,55,55,55,55,-112,-116,-114,117,-108,-109,-110,-111,55,-107,-165,-171,-172,-166,-162,-23,-24,-26,55,-115,-123,55,-128,55,-31,-37,234,-41,-32,-14,-68,-69,117,55,-120,55,55,-129,55,-16,-121,55,-118,55,92,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,55,-88,-131,-75,55,-77,55,-96,-113,55,55,-35,305,305,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,55,-94,-73,-74,-80,-90,-79,-81,117,117,-84,-86,]),'{':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,96,99,100,101,104,113,127,128,129,130,133,135,140,141,149,150,151,152,154,155,156,163,164,165,166,167,170,182,184,185,186,191,192,195,196,197,198,203,204,206,208,210,212,213,214,216,218,219,220,224,225,239,240,241,244,253,254,255,256,257,258,262,266,268,271,278,280,283,284,285,288,289,290,291,292,294,295,297,299,310,312,313,316,317,318,319,322,332,337,338,],[-2,56,-3,56,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,56,-163,-100,56,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,56,-132,-133,-134,-135,-136,-137,-138,-139,56,-172,56,56,56,56,56,-82,-93,-100,-172,-163,-161,-15,56,56,56,56,56,56,56,-112,-116,-114,-108,-109,-110,-111,56,-107,-165,-171,-166,-162,-23,-24,-26,56,-115,-123,56,-128,56,-31,-37,-32,-14,-68,-69,56,-120,56,56,-129,56,-16,-121,56,-118,56,-100,-163,-119,-95,-122,-117,-130,-38,-36,-71,-72,56,-88,-131,-75,56,-77,56,-96,-113,56,56,-35,56,-33,-34,-14,-70,-89,-91,-85,-87,-76,-78,-25,56,-94,56,56,56,-73,-74,-80,-90,-79,-81,-84,-86,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,57,64,77,78,81,82,83,84,86,101,104,113,127,128,129,130,135,140,141,149,150,151,152,154,156,163,165,167,170,182,184,185,186,192,197,203,204,208,214,216,218,219,220,224,225,239,240,244,253,254,258,262,271,280,283,284,285,288,289,290,291,292,295,299,316,317,318,319,322,332,337,338,],[-2,0,-14,-3,-1,-14,-5,-6,-7,-8,-9,-10,-11,-12,-13,-164,-172,-140,-20,-83,-17,-18,-19,-92,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-4,-172,-82,-93,-100,-172,-163,-161,-15,-112,-116,-114,-108,-109,-110,-111,-107,-165,-171,-166,-162,-23,-24,-26,-115,-123,-128,-31,-37,-32,-14,-68,-69,-120,-129,-16,-121,-118,-119,-95,-122,-117,-130,-38,-36,-71,-72,-88,-131,-75,-96,-113,-35,-33,-34,-14,-70,-89,-91,-85,-87,-76,-25,-94,-73,-74,-80,-90,-79,-81,-84,-86,]),'.':([16,17,19,32,33,45,62,63,64,65,81,82,83,84,140,141,148,149,150,180,181,187,212,213,290,291,],[-164,-172,67,-163,89,-161,-163,115,-172,-161,136,-172,-163,-161,-165,-171,-172,-166,-162,115,-163,-162,136,-163,320,321,]),'USING':([16,61,140,149,],[-164,114,-165,-166,]),',':([16,20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,64,65,81,82,83,84,101,103,104,113,121,124,127,128,129,130,135,140,141,144,146,147,148,149,150,156,163,165,179,180,181,184,185,186,187,192,197,202,204,208,214,218,219,220,222,251,252,253,262,285,325,],[-164,-140,-97,-98,-99,-101,-102,-103,-104,-105,-106,-132,-133,-134,-135,-136,-137,-138,-139,-172,-161,-100,-172,-163,-161,-112,164,-116,-114,194,-147,-108,-109,-110,-111,-107,-165,-171,206,-152,-153,-172,-166,-162,-115,-123,-128,236,237,-163,242,-68,-69,-162,-120,-129,259,-121,-118,-119,-122,-117,-130,269,-146,-145,-131,-113,242,336,]),':':([16,20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,58,59,64,65,81,82,83,84,94,101,104,106,113,117,127,128,129,130,131,135,140,141,149,150,156,163,165,178,179,180,181,183,187,189,192,197,199,200,204,208,214,218,219,220,253,262,265,281,282,],[-164,-140,-97,-98,-99,-101,-102,-103,-104,-105,-106,-132,-133,-134,-135,-136,-137,-138,-139,109,111,-172,-161,-100,-172,-163,-161,155,-112,-116,166,-114,190,-108,-109,-110,-111,198,-107,-165,-171,-166,-162,-115,-123,-128,235,-169,-170,-163,238,-162,245,-120,-129,256,257,-121,-118,-119,-122,-117,-130,-131,-113,297,-167,-168,]),'SEP':([17,32,62,64,82,83,86,141,148,177,181,185,213,215,],[-172,87,87,-172,-172,137,139,-171,-172,139,87,139,137,139,]),'=':([17,32,33,45,82,123,141,148,150,212,213,227,228,231,275,276,277,],[-172,-163,90,-161,-172,195,-171,195,-162,90,-163,273,274,278,310,312,313,]),'PEQ':([17,32,33,45,82,141,150,212,213,],[-172,-163,91,-161,-172,-171,-162,91,-163,]),'CMP_OP':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,80,81,82,83,84,94,101,104,113,127,128,129,130,131,135,141,148,150,156,163,165,192,197,204,208,212,213,214,218,219,220,253,262,284,299,],[-172,-140,70,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,70,-100,-172,-163,-161,70,-112,70,-114,-108,-109,70,70,70,-107,-171,-172,-162,-115,-123,-128,-120,-129,-121,-118,-100,-163,-119,-122,-117,-130,70,-113,70,70,]),'IN':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,76,80,81,82,83,84,94,101,104,113,127,128,129,130,131,135,141,148,150,156,163,165,192,197,204,208,212,213,214,218,219,220,253,262,284,299,],[-172,-140,71,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,133,71,-100,-172,-163,-161,71,71,71,-114,71,-109,71,71,71,-107,-171,-172,-162,-115,-123,-128,-120,-129,-121,-118,-100,-163,-119,-122,-117,-130,71,-113,71,71,]),'AND':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,80,81,82,83,84,94,101,104,113,127,128,129,130,131,135,141,148,150,156,163,165,192,197,204,208,212,213,214,218,219,220,253,262,284,299,],[-172,-140,72,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,72,-100,-172,-163,-161,72,-112,72,-114,-108,-109,-110,72,72,-107,-171,-172,-162,-115,-123,-128,-120,-129,-121,-118,-100,-163,-119,-122,-117,-130,72,-113,72,72,]),'OR':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,80,81,82,83,84,94,101,104,113,127,128,129,130,131,135,141,148,150,156,163,165,192,197,204,208,212,213,214,218,219,220,253,262,284,299,],[-172,-140,73,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,73,-100,-172,-163,-161,73,-112,73,-114,-108,-109,-110,-111,73,-107,-171,-172,-162,-115,-123,-128,-120,-129,-121,-118,-100,-163,-119,-122,-117,-130,73,-113,73,73,]),'?':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,80,81,82,83,84,94,101,104,113,127,128,129,130,131,135,141,148,150,156,163,165,173,175,176,177,192,197,204,208,212,213,214,218,219,220,253,262,279,284,299,],[-172,-140,74,-163,-100,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-172,74,-100,-172,-163,-161,74,-112,74,-114,-108,-109,-110,-111,74,-107,-171,-172,-162,-115,-123,-128,230,232,233,-41,-120,-129,-121,-118,-100,-163,-119,-122,-117,-130,74,-113,-42,74,74,]),'IS':([17,41,82,148,150,208,214,219,],[60,95,60,60,207,-118,-119,-117,]),')':([20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,68,80,81,82,83,84,88,99,101,104,113,119,120,121,122,124,127,128,129,130,135,141,142,143,144,145,146,147,148,150,156,160,163,165,192,193,194,197,201,202,204,205,206,208,214,218,219,220,249,250,251,252,253,260,261,262,296,],[-140,-97,-98,-99,-101,-102,-103,-104,-105,-106,-132,-133,-134,-135,-136,-137,-138,-139,-14,135,-100,-172,-163,-161,-14,-14,-112,-116,-114,192,-148,-14,-149,-147,-108,-109,-110,-111,-107,-171,204,-154,-14,-155,-152,-153,-172,-162,-115,218,-123,-128,-120,-14,-14,-129,258,-174,-121,-14,-14,-118,-119,-122,-117,-130,-150,-151,-146,-145,-131,-156,-157,-113,-173,]),']':([20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,55,69,81,82,83,84,100,101,102,103,104,113,120,121,122,124,126,127,128,129,130,135,141,148,150,153,156,157,161,162,163,164,165,189,192,193,194,197,204,208,214,218,219,220,221,234,245,246,249,250,251,252,253,262,287,305,324,325,336,339,],[-140,-97,-98,-99,-101,-102,-103,-104,-105,-106,-132,-133,-134,-135,-136,-137,-138,-139,-160,-14,-100,-172,-163,-161,-14,-112,163,-159,-116,-114,-148,-14,-149,-147,197,-108,-109,-110,-111,-107,-171,-172,-162,208,-115,214,219,220,-123,-160,-128,244,-120,-14,-14,-129,-121,-118,-119,-122,-117,-130,-158,279,288,289,-150,-151,-146,-145,-131,-113,319,-143,335,-142,-143,-144,]),'ELSE':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,81,82,83,84,101,104,113,127,128,129,130,135,141,150,151,152,154,155,156,163,165,192,197,204,208,209,210,211,212,213,214,218,219,220,253,262,267,295,322,],[-140,-20,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-100,-172,-163,-161,-112,-116,-114,-108,-109,-110,-111,-107,-171,-162,-23,-24,-26,-14,-115,-123,-128,-120,-129,-121,-118,265,-14,-22,-100,-163,-119,-122,-117,-130,-131,-113,-21,-25,-79,]),'ELIF':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,81,82,83,84,101,104,113,127,128,129,130,135,141,150,151,152,154,155,156,163,165,192,197,204,208,209,210,211,212,213,214,218,219,220,253,262,267,295,322,],[-140,-20,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-100,-172,-163,-161,-112,-116,-114,-108,-109,-110,-111,-107,-171,-162,-23,-24,-26,-14,-115,-123,-128,-120,-129,-121,-118,266,-14,-22,-100,-163,-119,-122,-117,-130,-131,-113,-21,-25,-79,]),'END':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,81,82,83,84,93,101,104,109,111,113,127,128,129,130,135,141,150,151,152,154,155,156,163,165,168,169,171,192,197,204,208,209,210,211,212,213,214,218,219,220,223,226,227,228,231,235,238,253,255,256,257,262,263,264,267,272,275,276,277,293,294,295,297,298,302,303,304,306,307,308,309,311,314,315,322,323,326,327,328,329,330,331,335,],[-140,-20,-17,-18,-19,-97,-98,-99,-101,-102,-103,-104,-105,-106,-161,-132,-133,-134,-135,-136,-137,-138,-139,-100,-172,-163,-161,154,-112,-116,170,170,-114,-108,-109,-110,-111,-107,-171,-162,-23,-24,-26,-14,-115,-123,-128,224,225,-40,-120,-129,-121,-118,-14,-14,-22,-100,-163,-119,-122,-117,-130,271,-39,-14,-52,-62,170,170,-131,-14,-77,-14,-113,-27,-28,-21,-48,-14,-14,-65,322,-78,-25,-14,-30,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-79,-29,-57,-58,-60,-61,-66,-67,-141,]),'}':([20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,56,81,82,83,84,101,104,105,107,108,113,127,128,129,130,135,141,150,156,163,165,192,197,204,208,214,218,219,220,222,253,262,269,270,300,301,],[-140,-97,-98,-99,-101,-102,-103,-104,-105,-106,-132,-133,-134,-135,-136,-137,-138,-139,-14,-100,-172,-163,-161,-112,-116,165,-127,-126,-114,-108,-109,-110,-111,-107,-171,-162,-115,-123,-128,-120,-129,-121,-118,-119,-122,-117,-130,-14,-131,-113,-14,-14,-124,-125,]),'DICT':([20,47,48,49,50,51,52,53,54,109,111,165,168,169,171,223,226,227,228,231,235,238,272,275,276,277,302,303,304,306,307,308,309,311,314,315,326,327,328,329,330,331,335,],[-140,-132,-133,-134,-135,-136,-137,-138,-139,173,173,-128,173,173,-40,173,-39,-14,-52,-62,173,173,-48,-14,-14,-65,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-57,-58,-60,-61,-66,-67,-141,]),'EXTENDS':([58,59,],[110,112,]),'DEFINED':([60,95,207,],[113,156,262,]),'AS':([64,86,97,98,141,],[-172,138,158,159,-171,]),'WHEN':([64,141,184,185,186,285,],[-172,-171,241,-68,-69,-70,]),'MATCHING':([64,141,215,],[-172,-171,268,]),'*':([68,69,88,99,100,125,194,206,],[125,125,125,125,125,196,125,125,]),'PARENTS':([114,242,],[186,186,]),'REL':([116,191,244,288,289,319,],[188,247,-88,-89,-91,-90,]),'UNDEF':([273,274,],[304,308,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'head':([0,],[2,]),'body':([2,5,],[4,57,]),'top_stmt':([2,5,],[5,5,]),'empty':([2,5,56,68,69,88,99,100,121,144,155,173,184,193,194,205,206,209,210,222,227,255,257,269,270,275,276,284,297,],[6,6,107,122,122,145,145,122,193,205,211,229,239,122,122,145,145,264,211,270,272,211,211,107,107,309,311,316,211,]),'entity_def':([2,5,],[7,7,]),'implement_def':([2,5,],[8,8,]),'implementation_def':([2,5,],[9,9,]),'relation':([2,5,],[10,10,]),'statement':([2,5,155,210,255,257,297,],[11,11,210,210,210,210,210,]),'typedef':([2,5,],[12,12,]),'index':([2,5,],[13,13,]),'import':([2,5,],[14,14,]),'class_ref':([2,5,18,29,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,110,112,132,133,155,159,164,166,191,195,196,198,206,210,236,237,241,243,247,248,255,257,266,268,297,],[19,19,61,79,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,179,179,199,85,85,217,85,85,85,85,85,85,85,85,179,179,85,286,290,291,85,85,85,85,85,]),'expression':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,133,155,164,166,191,195,196,198,206,210,241,255,257,266,268,297,],[21,21,80,94,101,104,127,128,129,130,131,104,104,104,104,104,104,104,104,21,104,104,104,104,104,253,104,21,284,21,21,94,299,21,]),'relation_def':([2,5,],[24,24,]),'assign':([2,5,155,210,255,257,297,],[25,25,25,25,25,25,25,]),'for':([2,5,155,210,255,257,297,],[26,26,26,26,26,26,26,]),'if':([2,5,155,210,255,257,297,],[27,27,27,27,27,27,27,]),'typedef_inner':([2,5,],[28,28,]),'ns_ref':([2,5,18,29,30,31,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,109,110,111,112,114,132,133,155,158,159,164,166,168,169,191,195,196,198,206,210,223,235,236,237,238,241,242,243,247,248,255,257,266,268,297,],[32,32,62,62,83,86,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,177,181,177,181,185,62,83,213,215,62,83,83,177,177,83,83,83,83,83,213,177,177,181,181,177,83,185,62,62,62,213,213,83,83,213,]),'var_ref':([2,5,18,29,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,110,112,132,133,155,159,164,166,191,195,196,198,206,210,236,237,241,243,247,248,255,257,266,268,297,],[33,33,63,63,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,180,180,63,81,212,63,81,81,81,81,81,81,81,212,180,180,81,63,63,63,212,212,81,81,212,]),'boolean_expression':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,133,155,164,166,191,195,196,198,206,210,241,255,257,266,268,297,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'constant':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,133,155,164,166,191,195,196,198,206,210,241,255,257,266,268,273,274,297,305,336,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,302,306,36,325,325,]),'function_call':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,133,155,164,166,191,195,196,198,206,210,241,255,257,266,268,297,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'constructor':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,133,155,159,164,166,191,195,196,198,206,210,241,255,257,266,268,297,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,216,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'list_def':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,133,155,164,166,191,195,196,198,206,210,241,255,257,266,268,297,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'map_def':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,133,155,164,166,191,195,196,198,206,210,241,255,257,266,268,278,297,310,312,313,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,314,40,326,328,330,]),'map_lookup':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,133,155,164,166,191,195,196,198,206,210,241,255,257,266,268,297,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'index_lookup':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,133,155,164,166,191,195,196,198,206,210,241,255,257,266,268,297,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'conditional_expression':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,133,155,164,166,191,195,196,198,206,210,241,255,257,266,268,297,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'attr_ref':([2,5,18,29,30,34,46,55,70,71,72,73,74,88,90,91,92,96,99,100,110,112,132,133,155,159,164,166,191,195,196,198,206,210,236,237,241,243,247,248,255,257,266,268,297,],[45,45,65,65,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,65,65,65,84,45,65,84,84,84,84,84,84,84,45,65,65,84,65,65,65,45,45,84,84,45,]),'if_body':([34,266,],[93,298,]),'operand_list':([55,164,191,],[102,221,248,]),'operand':([55,88,90,91,92,96,99,100,133,164,166,191,195,196,206,],[103,147,151,152,153,157,147,161,200,103,222,103,251,252,147,]),'pair_list':([56,269,],[105,300,]),'pair_list_empty':([56,269,270,],[108,108,301,]),'multi':([66,118,188,333,334,],[116,191,243,337,338,]),'param_list':([68,69,100,194,],[119,126,162,250,]),'param_list_empty':([68,69,100,193,194,],[120,120,120,249,120,]),'param_list_element':([68,69,88,99,100,194,206,],[121,121,146,146,121,121,146,]),'wrapped_kwargs':([68,69,88,99,100,194,206,],[124,124,124,124,124,124,124,]),'function_param_list':([88,99,206,],[142,160,261,]),'function_param_list_empty':([88,99,205,206,],[143,143,260,143,]),'function_param_list_element':([88,99,206,],[144,144,144,]),'entity_body_outer':([109,111,235,238,],[167,182,280,283,]),'entity_body':([109,111,168,235,238,],[169,169,223,169,169,]),'attr':([109,111,168,169,223,235,238,],[171,171,171,226,226,171,171,]),'attr_type':([109,111,168,169,223,235,238,],[172,172,172,172,172,172,172,]),'attr_type_opt':([109,111,168,169,223,235,238,],[174,174,174,174,174,174,174,]),'attr_type_multi':([109,111,168,169,223,235,238,],[175,175,175,175,175,175,175,]),'attr_base_type':([109,111,168,169,223,235,238,],[176,176,176,176,176,176,176,]),'class_ref_list':([110,112,236,237,],[178,183,281,282,]),'implement_ns_list':([114,242,],[184,285,]),'id_list':([134,259,],[201,296,]),'stmt_list':([155,210,255,257,297,],[209,267,293,293,323,]),'implementation':([199,],[254,]),'implementation_head':([199,],[255,]),'if_next':([209,],[263,]),'block':([255,257,],[292,295,]),'constant_list':([273,274,],[303,307,]),'constants':([305,336,],[324,339,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> head body','main',2,'p_main','plyInmantaParser.py',117),
  ('head -> <empty>','head',0,'p_main_head','plyInmantaParser.py',125),
  ('head -> MLS','head',1,'p_main_head_doc','plyInmantaParser.py',130),
  ('body -> top_stmt body','body',2,'p_body_collect','plyInmantaParser.py',135),
  ('body -> empty','body',1,'p_body_term','plyInmantaParser.py',142),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',147),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',148),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',149),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',150),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',151),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',152),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',153),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',154),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',159),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',169),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',175),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',186),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',187),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',188),
  ('statement -> expression','statement',1,'p_stmt','plyInmantaParser.py',189),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',203),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list_empty','plyInmantaParser.py',210),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',215),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',221),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',227),
  ('if -> IF if_body END','if',3,'p_if_start','plyInmantaParser.py',234),
  ('if_body -> expression : stmt_list if_next','if_body',4,'p_if_body','plyInmantaParser.py',240),
  ('if_next -> empty','if_next',1,'p_if_end','plyInmantaParser.py',247),
  ('if_next -> ELSE : stmt_list','if_next',3,'p_if_else','plyInmantaParser.py',253),
  ('if_next -> ELIF if_body','if_next',2,'p_if_elif','plyInmantaParser.py',259),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',271),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',278),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',283),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',290),
  ('entity_body_outer -> MLS entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',295),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',300),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',305),
  ('entity_body_outer -> MLS END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',310),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',315),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',321),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',326),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',332),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',338),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',339),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',345),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',346),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',347),
  ('attr -> attr_type CID empty','attr',3,'p_attr_err','plyInmantaParser.py',352),
  ('attr -> attr_type CID = constant','attr',4,'p_attr_err','plyInmantaParser.py',353),
  ('attr -> attr_type CID = constant_list','attr',4,'p_attr_err','plyInmantaParser.py',354),
  ('attr -> attr_type CID = UNDEF','attr',4,'p_attr_err','plyInmantaParser.py',355),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',362),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',368),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',369),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',375),
  ('attr -> DICT empty CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',381),
  ('attr -> DICT empty CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',382),
  ('attr -> DICT empty CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',383),
  ('attr -> DICT ? CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',384),
  ('attr -> DICT ? CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',385),
  ('attr -> DICT ? CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',386),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',393),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',399),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',405),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',410),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',416),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',422),
  ('implement_ns_list -> ns_ref','implement_ns_list',1,'p_implement_ns_list_ref','plyInmantaParser.py',429),
  ('implement_ns_list -> PARENTS','implement_ns_list',1,'p_implement_ns_list_parents','plyInmantaParser.py',434),
  ('implement_ns_list -> implement_ns_list , implement_ns_list','implement_ns_list',3,'p_implement_ns_list_collect','plyInmantaParser.py',439),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list empty','implement_def',5,'p_implement','plyInmantaParser.py',444),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list MLS','implement_def',5,'p_implement','plyInmantaParser.py',445),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression empty','implement_def',7,'p_implement_when','plyInmantaParser.py',454),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression MLS','implement_def',7,'p_implement_when','plyInmantaParser.py',455),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',465),
  ('implementation -> implementation_head block','implementation',2,'p_implementation','plyInmantaParser.py',478),
  ('implementation_head -> :','implementation_head',1,'p_implementation_head','plyInmantaParser.py',483),
  ('implementation_head -> : MLS','implementation_head',2,'p_implementation_head_doc','plyInmantaParser.py',488),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',493),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation_deprecated','plyInmantaParser.py',499),
  ('relation -> class_ref ID multi REL multi class_ref ID MLS','relation',8,'p_relation_deprecated_comment','plyInmantaParser.py',510),
  ('relation -> relation_def MLS','relation',2,'p_relation_outer_comment','plyInmantaParser.py',549),
  ('relation -> relation_def','relation',1,'p_relation_outer','plyInmantaParser.py',556),
  ('relation_def -> class_ref . ID multi REL class_ref . ID multi','relation_def',9,'p_relation','plyInmantaParser.py',561),
  ('relation_def -> class_ref . ID multi REL class_ref','relation_def',6,'p_relation_unidir','plyInmantaParser.py',567),
  ('relation_def -> class_ref . ID multi operand_list class_ref . ID multi','relation_def',9,'p_relation_annotated','plyInmantaParser.py',573),
  ('relation_def -> class_ref . ID multi operand_list class_ref','relation_def',6,'p_relation_annotated_unidir','plyInmantaParser.py',579),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',585),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',590),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',595),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',600),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',608),
  ('typedef -> typedef_inner MLS','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',613),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING expression','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',620),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',627),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',637),
  ('expression -> boolean_expression','expression',1,'p_expression','plyInmantaParser.py',647),
  ('expression -> constant','expression',1,'p_expression','plyInmantaParser.py',648),
  ('expression -> function_call','expression',1,'p_expression','plyInmantaParser.py',649),
  ('expression -> var_ref','expression',1,'p_expression','plyInmantaParser.py',650),
  ('expression -> constructor','expression',1,'p_expression','plyInmantaParser.py',651),
  ('expression -> list_def','expression',1,'p_expression','plyInmantaParser.py',652),
  ('expression -> map_def','expression',1,'p_expression','plyInmantaParser.py',653),
  ('expression -> map_lookup','expression',1,'p_expression','plyInmantaParser.py',654),
  ('expression -> index_lookup','expression',1,'p_expression','plyInmantaParser.py',655),
  ('expression -> conditional_expression','expression',1,'p_expression','plyInmantaParser.py',656),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','plyInmantaParser.py',661),
  ('boolean_expression -> expression CMP_OP expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',666),
  ('boolean_expression -> expression IN expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',667),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',668),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',669),
  ('boolean_expression -> NOT expression','boolean_expression',2,'p_boolean_expression_not','plyInmantaParser.py',678),
  ('boolean_expression -> var_ref . ID IS DEFINED','boolean_expression',5,'p_boolean_expression_is_defined','plyInmantaParser.py',684),
  ('boolean_expression -> ID IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_short','plyInmantaParser.py',690),
  ('boolean_expression -> map_lookup IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_map_lookup','plyInmantaParser.py',696),
  ('operand -> expression','operand',1,'p_operand','plyInmantaParser.py',716),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',721),
  ('map_lookup -> var_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',722),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',723),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',728),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',734),
  ('function_call -> attr_ref ( function_param_list )','function_call',4,'p_function_call_err_dot','plyInmantaParser.py',741),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',746),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',752),
  ('pair_list -> STRING : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',753),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',759),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',760),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',765),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',771),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',777),
  ('conditional_expression -> expression ? expression : expression','conditional_expression',5,'p_conditional_expression','plyInmantaParser.py',784),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',794),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',795),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',802),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',808),
  ('constant -> TRUE','constant',1,'p_constant_true','plyInmantaParser.py',814),
  ('constant -> FALSE','constant',1,'p_constant_false','plyInmantaParser.py',820),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',826),
  ('constant -> RSTRING','constant',1,'p_constant_rstring','plyInmantaParser.py',832),
  ('constant -> MLS','constant',1,'p_constant_mls','plyInmantaParser.py',838),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',917),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',923),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',928),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',933),
  ('wrapped_kwargs -> * * operand','wrapped_kwargs',3,'p_wrapped_kwargs','plyInmantaParser.py',939),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',945),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',951),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',957),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',958),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',964),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',965),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',980),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',987),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',993),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',994),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1000),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1001),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',1019),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',1025),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',1030),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',1035),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',1040),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',1046),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',1052),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',1063),
  ('class_ref -> var_ref . CID','class_ref',3,'p_class_ref_err_dot','plyInmantaParser.py',1069),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',1084),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',1090),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',1095),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',1100),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',1106),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',1112),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',1117),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',1123),
]
