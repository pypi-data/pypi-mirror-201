default:
  image: registry.redhat.io/ubi8/python-38@sha256:1b098a407c3721d497fa20dc30285c19813ef14feafc99346e68dbf4da90952b
  tags:
    - openshift

stages:
  - test
  - publish

variables:
  KAFKA_ADVERTISED_LISTENERS: INTRADOCKER://kafka-1:59092,EXTERNAL://127.0.0.1:9092
  KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  KAFKA_BROKER_ID: 1
  KAFKA_INTER_BROKER_LISTENER_NAME: INTRADOCKER
  KAFKA_LISTENERS: INTRADOCKER://kafka-1:59092,EXTERNAL://kafka-1:9092
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTRADOCKER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
  KAFKA_MIN_INSYNC_REPLICAS: 1
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  KAKFA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  KUBERNETES_MEMORY_REQUEST: 2Gi
  KUBERNETES_MEMORY_LIMIT: 4Gi
  LOG_DIR: "/tmp/logs"

services:
  - name: registry.redhat.io/amq7/amq-streams-kafka-23:1.3.0
    alias: zookeeper
    command:
      ["sh", "-c", "bin/zookeeper-server-start.sh config/zookeeper.properties"]
  - name: registry.redhat.io/amq7/amq-streams-kafka-23:1.3.0
    alias: kafka-1
    command:
      [
        "sh",
        "-c",
        "bin/kafka-server-start.sh config/server.properties --override broker.id=$${KAFKA_BROKER_ID} --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override min.insync.replicas=$${KAFKA_MIN_INSYNC_REPLICAS} --override transaction.state.log.min.isr=$${KAKFA_TRANSACTION_STATE_LOG_MIN_ISR} --override offsets.topic.replication.factor=$${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR} --override transaction.state.log.replication.factor=$${KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR} --override auto.create.topics.enable=$${KAFKA_AUTO_CREATE_TOPICS_ENABLE}",
      ]

test:
  stage: test
  before_script:
    - pip install tox
  script:
    - tox -e py38

pypi:
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - pip install tox
  script:
    - tox -e build
    - tox -e upload

pages:
  stage: publish
  needs: []
  before_script:
    - pip install tox
  script:
    - tox -e docs
    - cp -r docs/build/html public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
