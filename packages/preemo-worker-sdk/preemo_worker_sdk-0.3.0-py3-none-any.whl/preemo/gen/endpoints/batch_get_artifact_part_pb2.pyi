"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class GetArtifactPartConfigMetadata(google.protobuf.message.Message):
    """This config is included for potential future use."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___GetArtifactPartConfigMetadata = GetArtifactPartConfigMetadata

@typing_extensions.final
class GetArtifactPartConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class MetadatasByPartNumberEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___GetArtifactPartConfigMetadata: ...
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: global___GetArtifactPartConfigMetadata | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    METADATAS_BY_PART_NUMBER_FIELD_NUMBER: builtins.int
    @property
    def metadatas_by_part_number(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___GetArtifactPartConfigMetadata]: ...
    def __init__(
        self,
        *,
        metadatas_by_part_number: collections.abc.Mapping[builtins.int, global___GetArtifactPartConfigMetadata] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metadatas_by_part_number", b"metadatas_by_part_number"]) -> None: ...

global___GetArtifactPartConfig = GetArtifactPartConfig

@typing_extensions.final
class BatchGetArtifactPartRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ConfigsByArtifactIdEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___GetArtifactPartConfig: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___GetArtifactPartConfig | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    CONFIGS_BY_ARTIFACT_ID_FIELD_NUMBER: builtins.int
    @property
    def configs_by_artifact_id(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___GetArtifactPartConfig]: ...
    def __init__(
        self,
        *,
        configs_by_artifact_id: collections.abc.Mapping[builtins.str, global___GetArtifactPartConfig] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["configs_by_artifact_id", b"configs_by_artifact_id"]) -> None: ...

global___BatchGetArtifactPartRequest = BatchGetArtifactPartRequest

@typing_extensions.final
class GetArtifactPartResultMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOWNLOAD_SIGNED_URL_FIELD_NUMBER: builtins.int
    download_signed_url: builtins.str
    def __init__(
        self,
        *,
        download_signed_url: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_download_signed_url", b"_download_signed_url", "download_signed_url", b"download_signed_url"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_download_signed_url", b"_download_signed_url", "download_signed_url", b"download_signed_url"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_download_signed_url", b"_download_signed_url"]) -> typing_extensions.Literal["download_signed_url"] | None: ...

global___GetArtifactPartResultMetadata = GetArtifactPartResultMetadata

@typing_extensions.final
class GetArtifactPartResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class MetadatasByPartNumberEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___GetArtifactPartResultMetadata: ...
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: global___GetArtifactPartResultMetadata | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    METADATAS_BY_PART_NUMBER_FIELD_NUMBER: builtins.int
    @property
    def metadatas_by_part_number(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___GetArtifactPartResultMetadata]: ...
    def __init__(
        self,
        *,
        metadatas_by_part_number: collections.abc.Mapping[builtins.int, global___GetArtifactPartResultMetadata] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metadatas_by_part_number", b"metadatas_by_part_number"]) -> None: ...

global___GetArtifactPartResult = GetArtifactPartResult

@typing_extensions.final
class BatchGetArtifactPartResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ResultsByArtifactIdEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___GetArtifactPartResult: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___GetArtifactPartResult | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    RESULTS_BY_ARTIFACT_ID_FIELD_NUMBER: builtins.int
    @property
    def results_by_artifact_id(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___GetArtifactPartResult]: ...
    def __init__(
        self,
        *,
        results_by_artifact_id: collections.abc.Mapping[builtins.str, global___GetArtifactPartResult] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["results_by_artifact_id", b"results_by_artifact_id"]) -> None: ...

global___BatchGetArtifactPartResponse = BatchGetArtifactPartResponse
