#!/usr/bin/env python3
# This file is placed in the Public Domain.


'object programming quest'


import os
import readline
import sys
import termios
import time
import traceback


sys.path.insert(0, os.getcwd())


from opq.handler import Client, Command, Error, Event, Handler, Listens
from opq.handler import command, parse, scan
from opq.objects import update
from opq.modules import cmd, flt, irc, log, rss, sts, tdo, thr
from opq.persist import Persist
from opq.threads import launch


Persist.workdir = os.path.expanduser('~/.opq')


scan(cmd)
scan(flt)
scan(irc)
scan(log)
scan(rss)
scan(sts)
scan(tdo)
scan(thr)


class CLI(Client):

    def announce(self, txt):
        pass

    def raw(self, txt):
        print(txt)
        sys.stdout.flush()


class Console(CLI):

    def handle(self, evt):
        CLI.handle(self, evt)
        evt.wait()

    def poll(self):
        return self.event(input("> "))


def daemon():
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    os.umask(0)
    sis = open('/dev/null', 'r')
    os.dup2(sis.fileno(), sys.stdin.fileno())
    sos = open('/dev/null', 'a+')
    ses = open('/dev/null', 'a+')
    os.dup2(sos.fileno(), sys.stdout.fileno())
    os.dup2(ses.fileno(), sys.stderr.fileno())


def waiter():
    errors = []
    for ex in Error.errors:
        traceback.print_exception(type(ex), ex, ex.__traceback__)
        errors.append(ex)
    for exc in errors:
        if exc in Error.errors:
            Error.errors.remove(exc)


def wrap(func):
    fds = sys.stdin.fileno()
    gotterm = True
    try:
        old = termios.tcgetattr(fds)
    except termios.error:
        gotterm = False
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print('')
    finally:
        if gotterm:
            termios.tcsetattr(fds, termios.TCSADRAIN, old)
        waiter()
      

def main():
    dowait = False
    cfg = parse(' '.join(sys.argv[1:]))
    if cfg.txt:
        cli = CLI()
        command(cli, cfg.otxt)
    elif 'd' in cfg.opts:
        daemon()
        dowait = True
    elif 'c' in cfg.opts:
        date = time.ctime(time.time()).replace('  ', ' ')
        print(f'OPQ started {date}')
        csl = Console()
        launch(csl.loop)
        dowait = True
    if dowait:
        if os.path.exists("modules"):
            from modules.scanner import importer, scandir
            scandir("modules", importer, doall=True)
        irc.start()
        rss.start()
        while 1:
            time.sleep(1.0)
            waiter()


wrap(main)
waiter()
