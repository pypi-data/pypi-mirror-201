# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .games import Games
from .photos_item import PhotosItem
from .player import Player


class Group(pydantic.BaseModel):
    id: typing.Optional[int]
    added_at: typing.Optional[str]
    updated_at: typing.Optional[str]
    is_event: typing.Optional[bool]
    name: typing.Optional[str]
    date: str
    time: str
    start_at: typing.Optional[str]
    games: typing.Optional[typing.List[Games]]
    players: typing.List[Player]
    photos: typing.Optional[typing.List[PhotosItem]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
