# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# data of a single axis zero point offset for a joint transformation
class KinCfgJntTrafoSingleAxisOffset(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsKinCfgJntTrafoSingleAxisOffset(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KinCfgJntTrafoSingleAxisOffset()
        x.Init(buf, n + offset)
        return x

    # KinCfgJntTrafoSingleAxisOffset
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # axis object name as configured in the ctrlX MOTION
    # KinCfgJntTrafoSingleAxisOffset
    def AxisName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # zero point offset of the axis (is used, when the axis is grouped in the kinematics and used as trafo axis in the joint transformation)
    # offset is subtracted from the axis position in the forward transformation before it is given to the joint transformation
    # KinCfgJntTrafoSingleAxisOffset
    def ZeroOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # unit of zero point offset
    # KinCfgJntTrafoSingleAxisOffset
    def ZeroOffsetUnit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def KinCfgJntTrafoSingleAxisOffsetStart(builder): builder.StartObject(3)
def KinCfgJntTrafoSingleAxisOffsetAddAxisName(builder, axisName): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(axisName), 0)
def KinCfgJntTrafoSingleAxisOffsetAddZeroOffset(builder, zeroOffset): builder.PrependFloat64Slot(1, zeroOffset, 0.0)
def KinCfgJntTrafoSingleAxisOffsetAddZeroOffsetUnit(builder, zeroOffsetUnit): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(zeroOffsetUnit), 0)
def KinCfgJntTrafoSingleAxisOffsetEnd(builder): return builder.EndObject()


class KinCfgJntTrafoSingleAxisOffsetT(object):

    # KinCfgJntTrafoSingleAxisOffsetT
    def __init__(self):
        self.axisName = None  # type: str
        self.zeroOffset = 0.0  # type: float
        self.zeroOffsetUnit = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        kinCfgJntTrafoSingleAxisOffset = KinCfgJntTrafoSingleAxisOffset()
        kinCfgJntTrafoSingleAxisOffset.Init(buf, pos)
        return cls.InitFromObj(kinCfgJntTrafoSingleAxisOffset)

    @classmethod
    def InitFromObj(cls, kinCfgJntTrafoSingleAxisOffset):
        x = KinCfgJntTrafoSingleAxisOffsetT()
        x._UnPack(kinCfgJntTrafoSingleAxisOffset)
        return x

    # KinCfgJntTrafoSingleAxisOffsetT
    def _UnPack(self, kinCfgJntTrafoSingleAxisOffset):
        if kinCfgJntTrafoSingleAxisOffset is None:
            return
        self.axisName = kinCfgJntTrafoSingleAxisOffset.AxisName()
        self.zeroOffset = kinCfgJntTrafoSingleAxisOffset.ZeroOffset()
        self.zeroOffsetUnit = kinCfgJntTrafoSingleAxisOffset.ZeroOffsetUnit()

    # KinCfgJntTrafoSingleAxisOffsetT
    def Pack(self, builder):
        if self.axisName is not None:
            axisName = builder.CreateString(self.axisName)
        if self.zeroOffsetUnit is not None:
            zeroOffsetUnit = builder.CreateString(self.zeroOffsetUnit)
        KinCfgJntTrafoSingleAxisOffsetStart(builder)
        if self.axisName is not None:
            KinCfgJntTrafoSingleAxisOffsetAddAxisName(builder, axisName)
        KinCfgJntTrafoSingleAxisOffsetAddZeroOffset(builder, self.zeroOffset)
        if self.zeroOffsetUnit is not None:
            KinCfgJntTrafoSingleAxisOffsetAddZeroOffsetUnit(builder, zeroOffsetUnit)
        kinCfgJntTrafoSingleAxisOffset = KinCfgJntTrafoSingleAxisOffsetEnd(builder)
        return kinCfgJntTrafoSingleAxisOffset
