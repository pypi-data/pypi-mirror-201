# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# parameters for the command option FeedGroup (modify the resulting path parameter based on a given feedGroup) for kinematics
class KinCmdOptFeedGroupData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsKinCmdOptFeedGroupData(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KinCmdOptFeedGroupData()
        x.Init(buf, n + offset)
        return x

    # KinCmdOptFeedGroupData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # permanent type (e.g. "PermOn")
    # KinCmdOptFeedGroupData
    def PermType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # name of the feedGroup that should be used to define the path parameter (default FG_XYZ)
    # possible feedGroups are: "FG_XYZ", "FG_XYZ_O", "FG_XYZ_A", "FG_XYZ_O_A"
    # KinCmdOptFeedGroupData
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

def KinCmdOptFeedGroupDataStart(builder): builder.StartObject(2)
def KinCmdOptFeedGroupDataAddPermType(builder, permType): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(permType), 0)
def KinCmdOptFeedGroupDataAddType(builder, type): builder.PrependInt8Slot(1, type, 0)
def KinCmdOptFeedGroupDataEnd(builder): return builder.EndObject()


class KinCmdOptFeedGroupDataT(object):

    # KinCmdOptFeedGroupDataT
    def __init__(self):
        self.permType = None  # type: str
        self.type = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        kinCmdOptFeedGroupData = KinCmdOptFeedGroupData()
        kinCmdOptFeedGroupData.Init(buf, pos)
        return cls.InitFromObj(kinCmdOptFeedGroupData)

    @classmethod
    def InitFromObj(cls, kinCmdOptFeedGroupData):
        x = KinCmdOptFeedGroupDataT()
        x._UnPack(kinCmdOptFeedGroupData)
        return x

    # KinCmdOptFeedGroupDataT
    def _UnPack(self, kinCmdOptFeedGroupData):
        if kinCmdOptFeedGroupData is None:
            return
        self.permType = kinCmdOptFeedGroupData.PermType()
        self.type = kinCmdOptFeedGroupData.Type()

    # KinCmdOptFeedGroupDataT
    def Pack(self, builder):
        if self.permType is not None:
            permType = builder.CreateString(self.permType)
        KinCmdOptFeedGroupDataStart(builder)
        if self.permType is not None:
            KinCmdOptFeedGroupDataAddPermType(builder, permType)
        KinCmdOptFeedGroupDataAddType(builder, self.type)
        kinCmdOptFeedGroupData = KinCmdOptFeedGroupDataEnd(builder)
        return kinCmdOptFeedGroupData
