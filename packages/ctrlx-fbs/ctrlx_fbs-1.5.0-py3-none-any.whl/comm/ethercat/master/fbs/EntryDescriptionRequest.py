# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EntryDescriptionRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsEntryDescriptionRequest(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EntryDescriptionRequest()
        x.Init(buf, n + offset)
        return x

    # EntryDescriptionRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EntryDescriptionRequest
    def AddressType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # EntryDescriptionRequest
    def Address(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # EntryDescriptionRequest
    def ObjectIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # EntryDescriptionRequest
    def SubIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # EntryDescriptionRequest
    def ValueInfo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # EntryDescriptionRequest
    def MaxLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def EntryDescriptionRequestStart(builder): builder.StartObject(6)
def EntryDescriptionRequestAddAddressType(builder, addressType): builder.PrependUint8Slot(0, addressType, 0)
def EntryDescriptionRequestAddAddress(builder, address): builder.PrependUint16Slot(1, address, 0)
def EntryDescriptionRequestAddObjectIndex(builder, objectIndex): builder.PrependUint16Slot(2, objectIndex, 0)
def EntryDescriptionRequestAddSubIndex(builder, subIndex): builder.PrependUint8Slot(3, subIndex, 0)
def EntryDescriptionRequestAddValueInfo(builder, valueInfo): builder.PrependUint8Slot(4, valueInfo, 0)
def EntryDescriptionRequestAddMaxLength(builder, maxLength): builder.PrependUint32Slot(5, maxLength, 0)
def EntryDescriptionRequestEnd(builder): return builder.EndObject()


class EntryDescriptionRequestT(object):

    # EntryDescriptionRequestT
    def __init__(self):
        self.addressType = 0  # type: int
        self.address = 0  # type: int
        self.objectIndex = 0  # type: int
        self.subIndex = 0  # type: int
        self.valueInfo = 0  # type: int
        self.maxLength = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        entryDescriptionRequest = EntryDescriptionRequest()
        entryDescriptionRequest.Init(buf, pos)
        return cls.InitFromObj(entryDescriptionRequest)

    @classmethod
    def InitFromObj(cls, entryDescriptionRequest):
        x = EntryDescriptionRequestT()
        x._UnPack(entryDescriptionRequest)
        return x

    # EntryDescriptionRequestT
    def _UnPack(self, entryDescriptionRequest):
        if entryDescriptionRequest is None:
            return
        self.addressType = entryDescriptionRequest.AddressType()
        self.address = entryDescriptionRequest.Address()
        self.objectIndex = entryDescriptionRequest.ObjectIndex()
        self.subIndex = entryDescriptionRequest.SubIndex()
        self.valueInfo = entryDescriptionRequest.ValueInfo()
        self.maxLength = entryDescriptionRequest.MaxLength()

    # EntryDescriptionRequestT
    def Pack(self, builder):
        EntryDescriptionRequestStart(builder)
        EntryDescriptionRequestAddAddressType(builder, self.addressType)
        EntryDescriptionRequestAddAddress(builder, self.address)
        EntryDescriptionRequestAddObjectIndex(builder, self.objectIndex)
        EntryDescriptionRequestAddSubIndex(builder, self.subIndex)
        EntryDescriptionRequestAddValueInfo(builder, self.valueInfo)
        EntryDescriptionRequestAddMaxLength(builder, self.maxLength)
        entryDescriptionRequest = EntryDescriptionRequestEnd(builder)
        return entryDescriptionRequest
