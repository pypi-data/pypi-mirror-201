# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ProfileChannelInfoResponse(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsProfileChannelInfoResponse(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ProfileChannelInfoResponse()
        x.Init(buf, n + offset)
        return x

    # ProfileChannelInfoResponse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ProfileChannelInfoResponse
    def ProfileNo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # ProfileChannelInfoResponse
    def AddInfo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # ProfileChannelInfoResponse
    def DisplayName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ProfileChannelInfoResponseStart(builder): builder.StartObject(3)
def ProfileChannelInfoResponseAddProfileNo(builder, ProfileNo): builder.PrependUint16Slot(0, ProfileNo, 0)
def ProfileChannelInfoResponseAddAddInfo(builder, AddInfo): builder.PrependUint16Slot(1, AddInfo, 0)
def ProfileChannelInfoResponseAddDisplayName(builder, DisplayName): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(DisplayName), 0)
def ProfileChannelInfoResponseEnd(builder): return builder.EndObject()


class ProfileChannelInfoResponseT(object):

    # ProfileChannelInfoResponseT
    def __init__(self):
        self.profileNo = 0  # type: int
        self.addInfo = 0  # type: int
        self.displayName = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        profileChannelInfoResponse = ProfileChannelInfoResponse()
        profileChannelInfoResponse.Init(buf, pos)
        return cls.InitFromObj(profileChannelInfoResponse)

    @classmethod
    def InitFromObj(cls, profileChannelInfoResponse):
        x = ProfileChannelInfoResponseT()
        x._UnPack(profileChannelInfoResponse)
        return x

    # ProfileChannelInfoResponseT
    def _UnPack(self, profileChannelInfoResponse):
        if profileChannelInfoResponse is None:
            return
        self.profileNo = profileChannelInfoResponse.ProfileNo()
        self.addInfo = profileChannelInfoResponse.AddInfo()
        self.displayName = profileChannelInfoResponse.DisplayName()

    # ProfileChannelInfoResponseT
    def Pack(self, builder):
        if self.displayName is not None:
            displayName = builder.CreateString(self.displayName)
        ProfileChannelInfoResponseStart(builder)
        ProfileChannelInfoResponseAddProfileNo(builder, self.profileNo)
        ProfileChannelInfoResponseAddAddInfo(builder, self.addInfo)
        if self.displayName is not None:
            ProfileChannelInfoResponseAddDisplayName(builder, displayName)
        profileChannelInfoResponse = ProfileChannelInfoResponseEnd(builder)
        return profileChannelInfoResponse
