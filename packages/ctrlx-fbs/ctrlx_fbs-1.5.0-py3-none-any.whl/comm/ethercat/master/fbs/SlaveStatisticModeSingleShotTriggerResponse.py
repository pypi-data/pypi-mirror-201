# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SlaveStatisticModeSingleShotTriggerResponse(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsSlaveStatisticModeSingleShotTriggerResponse(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SlaveStatisticModeSingleShotTriggerResponse()
        x.Init(buf, n + offset)
        return x

    # SlaveStatisticModeSingleShotTriggerResponse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SlaveStatisticModeSingleShotTriggerResponse
    def Forced(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # SlaveStatisticModeSingleShotTriggerResponse
    def Discarded(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def SlaveStatisticModeSingleShotTriggerResponseStart(builder): builder.StartObject(2)
def SlaveStatisticModeSingleShotTriggerResponseAddForced(builder, forced): builder.PrependBoolSlot(0, forced, 0)
def SlaveStatisticModeSingleShotTriggerResponseAddDiscarded(builder, discarded): builder.PrependBoolSlot(1, discarded, 0)
def SlaveStatisticModeSingleShotTriggerResponseEnd(builder): return builder.EndObject()


class SlaveStatisticModeSingleShotTriggerResponseT(object):

    # SlaveStatisticModeSingleShotTriggerResponseT
    def __init__(self):
        self.forced = False  # type: bool
        self.discarded = False  # type: bool

    @classmethod
    def InitFromBuf(cls, buf, pos):
        slaveStatisticModeSingleShotTriggerResponse = SlaveStatisticModeSingleShotTriggerResponse()
        slaveStatisticModeSingleShotTriggerResponse.Init(buf, pos)
        return cls.InitFromObj(slaveStatisticModeSingleShotTriggerResponse)

    @classmethod
    def InitFromObj(cls, slaveStatisticModeSingleShotTriggerResponse):
        x = SlaveStatisticModeSingleShotTriggerResponseT()
        x._UnPack(slaveStatisticModeSingleShotTriggerResponse)
        return x

    # SlaveStatisticModeSingleShotTriggerResponseT
    def _UnPack(self, slaveStatisticModeSingleShotTriggerResponse):
        if slaveStatisticModeSingleShotTriggerResponse is None:
            return
        self.forced = slaveStatisticModeSingleShotTriggerResponse.Forced()
        self.discarded = slaveStatisticModeSingleShotTriggerResponse.Discarded()

    # SlaveStatisticModeSingleShotTriggerResponseT
    def Pack(self, builder):
        SlaveStatisticModeSingleShotTriggerResponseStart(builder)
        SlaveStatisticModeSingleShotTriggerResponseAddForced(builder, self.forced)
        SlaveStatisticModeSingleShotTriggerResponseAddDiscarded(builder, self.discarded)
        slaveStatisticModeSingleShotTriggerResponse = SlaveStatisticModeSingleShotTriggerResponseEnd(builder)
        return slaveStatisticModeSingleShotTriggerResponse
