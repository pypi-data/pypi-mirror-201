# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Misc_ListRegisteredCmdsOptions(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsMisc_ListRegisteredCmdsOptions(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Misc_ListRegisteredCmdsOptions()
        x.Init(buf, n + offset)
        return x

    # Misc_ListRegisteredCmdsOptions
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Misc_ListRegisteredCmdsOptions
    def ObjType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Misc_ListRegisteredCmdsOptions
    def CmdType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

def Misc_ListRegisteredCmdsOptionsStart(builder): builder.StartObject(2)
def Misc_ListRegisteredCmdsOptionsAddObjType(builder, objType): builder.PrependInt8Slot(0, objType, 0)
def Misc_ListRegisteredCmdsOptionsAddCmdType(builder, cmdType): builder.PrependInt8Slot(1, cmdType, 0)
def Misc_ListRegisteredCmdsOptionsEnd(builder): return builder.EndObject()


class Misc_ListRegisteredCmdsOptionsT(object):

    # Misc_ListRegisteredCmdsOptionsT
    def __init__(self):
        self.objType = 0  # type: int
        self.cmdType = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        miscListRegisteredCmdsOptions = Misc_ListRegisteredCmdsOptions()
        miscListRegisteredCmdsOptions.Init(buf, pos)
        return cls.InitFromObj(miscListRegisteredCmdsOptions)

    @classmethod
    def InitFromObj(cls, miscListRegisteredCmdsOptions):
        x = Misc_ListRegisteredCmdsOptionsT()
        x._UnPack(miscListRegisteredCmdsOptions)
        return x

    # Misc_ListRegisteredCmdsOptionsT
    def _UnPack(self, miscListRegisteredCmdsOptions):
        if miscListRegisteredCmdsOptions is None:
            return
        self.objType = miscListRegisteredCmdsOptions.ObjType()
        self.cmdType = miscListRegisteredCmdsOptions.CmdType()

    # Misc_ListRegisteredCmdsOptionsT
    def Pack(self, builder):
        Misc_ListRegisteredCmdsOptionsStart(builder)
        Misc_ListRegisteredCmdsOptionsAddObjType(builder, self.objType)
        Misc_ListRegisteredCmdsOptionsAddCmdType(builder, self.cmdType)
        miscListRegisteredCmdsOptions = Misc_ListRegisteredCmdsOptionsEnd(builder)
        return miscListRegisteredCmdsOptions
