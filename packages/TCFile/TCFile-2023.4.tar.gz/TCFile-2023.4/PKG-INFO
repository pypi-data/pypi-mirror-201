Metadata-Version: 2.1
Name: TCFile
Version: 2023.4
Summary: Python package for handling TCF data. It works with Tomcube data
Author-email: Dohyeon Lee <dleh428@kaist.ac.kr>
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Operating System :: Microsoft :: Windows
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Image Processing
Requires-Dist: numpy>=1.18.5
Requires-Dist: scipy>=1.7.0
Requires-Dist: scikit-image>0.18.2
Requires-Dist: h5py>=3.2.0
Requires-Dist: multimethod>=1.4
Requires-Dist: matplotlib>=3.4.0
Requires-Dist: opencv-python>=4.5.0
Requires-Dist: pytest>=6.2

## TCFile python package

Basic image processing tools of tomocube data.

## Installation

After downloading the repository, execute the following command in the repository;

```bash
pip install .
```

## Note

It is not for normal users, and API is not fixed. 
Please use this package with full understanding.
Any suggestions and comments are welcome! 

## Use case

```python

from ..TCFile import *

tcfile = TCFile('test.TCF','3D') # for now, it only read 3D RI data
print(f"number of snapshots : {len(tcfile)}")

## Usage 1: handling a data for each snapshot
data = tcfile[0]
print(f"shape of data : {data.shape}")
# or
for data in tcfile:
    # do some operations on the data ...
    pass
```

## Test (for development and contribution)

```bash
conda install PIL h5py numpy
pytest TCFile-tests/TCFhandler.py
```

