:py:mod:`abacusai.eda_forecasting_analysis`
===========================================

.. py:module:: abacusai.eda_forecasting_analysis


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   abacusai.eda_forecasting_analysis.EdaForecastingAnalysis




.. py:class:: EdaForecastingAnalysis(client, primaryKeys=None, forecastingTargetFeature=None, timestampFeature=None, forecastFrequency=None, salesAcrossTime={}, cummulativeContribution={}, missingValueDistribution={}, historyLength={}, numRowsHistogram={}, productMaturity={})

   Bases: :py:obj:`abacusai.return_class.AbstractApiClass`

   Eda Forecasting Analysis of the latest version of the data.

   :param client: An authenticated API Client instance
   :type client: ApiClient
   :param primaryKeys: Name of the primary keys in the data
   :type primaryKeys: list
   :param forecastingTargetFeature: Feature in the data that represents the target.
   :type forecastingTargetFeature: str
   :param timestampFeature: Feature in the data that represents the timestamp column.
   :type timestampFeature: str
   :param forecastFrequency: Frequency of data, could be hourly, daily, weekly, monthly, quarterly or yearly.
   :type forecastFrequency: str
   :param salesAcrossTime: Data showing average, p10, p90, median sales across time
   :type salesAcrossTime: ForecastingAnalysisGraphData
   :param cummulativeContribution: Data showing what percent of items contribute to what amount of sales.
   :type cummulativeContribution: ForecastingAnalysisGraphData
   :param missingValueDistribution: Data showing missing or null value distribution
   :type missingValueDistribution: ForecastingAnalysisGraphData
   :param historyLength: Data showing length of history distribution
   :type historyLength: ForecastingAnalysisGraphData
   :param numRowsHistogram: Data showing number of rows for an item distribution
   :type numRowsHistogram: ForecastingAnalysisGraphData
   :param productMaturity: Data showing length of how long a product has been alive with average, p10, p90 and median
   :type productMaturity: ForecastingAnalysisGraphData

   .. py:method:: __repr__()

      Return repr(self).


   .. py:method:: to_dict()

      Get a dict representation of the parameters in this class

      :returns: The dict value representation of the class parameters
      :rtype: dict



