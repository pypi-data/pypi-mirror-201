[tool.poetry]
name = "doccano-mini"
version = "0.0.10"
description = "Annotation meets Large Language Models."
authors = ["Hironsan <hiroki.nakayama.py@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/doccano/doccano-mini"
repository = "https://github.com/doccano/doccano-mini"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.scripts]
doccano-mini = 'doccano_mini.cli:main'

[tool.poetry.dependencies]
python = ">=3.8.1,<3.9.7 || >3.9.7,<4.0"
streamlit = "^1.20.0"
langchain = "^0.0.113"
openai = "^0.27.2"
st-ner-annotate = "^0.1.0"
scikit-learn = "^1.2.2"
datasets = "^2.11.0"
more-itertools = "^9.1.0"

[tool.poetry.dev-dependencies]
taskipy = "^1.10.3"
black = "^23.1.0"
isort = "^5.12.0"
mypy = "^1.1.1"
pyproject-flake8 = "^6.0.0"
pytest = "^7.2.2"
pytest-cov = "^4.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py38', 'py39']
include = '\.pyi?$'

[tool.flake8]
max-line-length = 120
max-complexity = 18
ignore = "E203,E266,W503,"
filename = "*.py"

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true
show_error_codes = true

[tool.isort]
profile = "black"
include_trailing_comma = true
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.taskipy.tasks]
isort = "isort . -c --skip migrations"
flake8 = "pflake8 --filename \"*.py\""
black = "black --check ."
mypy = "mypy ."
test = "pytest --cov=doccano_mini --cov-report=term-missing -vv"
