import numpy as np
from _typeshed import Incomplete
from edgeiq.model_config import ModelConfig as ModelConfig

class EyeCloudFrame(np.ndarray):
    def __new__(cls, frame, sequence_index): ...
    def __array_finalize__(self, frame_obj) -> None: ...
    @property
    def sequence_index(self): ...

class EyeCloud:
    def __init__(self, model_id: Incomplete | None = ...) -> None: ...
    @property
    def model_id(self): ...
    @property
    def model_purpose(self): ...
    def start(self): ...
    def stop(self) -> None: ...
    def get_frame(self): ...
    def get_model_result(self, **inference_args): ...
    def get_frame_data(self): ...
    def process_frame_data(self, frame_data): ...
    def get_model_data(self): ...
    def __enter__(self): ...
    def __exit__(self, type, value, traceback) -> None: ...
    def __del__(self) -> None: ...
