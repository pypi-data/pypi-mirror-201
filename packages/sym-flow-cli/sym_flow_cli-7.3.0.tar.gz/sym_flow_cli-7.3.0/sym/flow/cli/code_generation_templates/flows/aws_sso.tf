# This file was generated by symflow CLI vSYM_TEMPLATE_VAR_SYMFLOW_VERSION on SYM_TEMPLATE_VAR_GENERATION_TIME UTC.
# No changes to this file are required to start managing your AWS SSO access with Sym.
# Modify this file to customize your AWS SSO access management, or add more Permission Sets and Accounts to be managed.

# Use a data resource to get the existing permission set's ARN
data "aws_ssoadmin_permission_set" "SYM_TEMPLATE_VAR_FLOW_RESOURCE_NAME_SYM_TEMPLATE_VAR_PERMISSION_SET_NAME" {
  provider = aws.sso

  instance_arn = module.sso_connector.settings["instance_arn"]
  name         = "SYM_TEMPLATE_VAR_PERMISSION_SET_NAME"
}

# A target AWS SSO Permission Set Assignment that your Sym Strategy can manage access to
resource "sym_target" "SYM_TEMPLATE_VAR_FLOW_RESOURCE_NAME_target" {
  type = "aws_sso_permission_set"

  name  = "SYM_TEMPLATE_VAR_FLOW_NAME-permission-set"
  label = "SYM_TEMPLATE_VAR_PERMISSION_SET_NAME"

  settings = {
    # `type=aws_sso_permission_set` sym_targets need both an AWS Permission Set
    # ARN and an AWS Account ID to make an SSO account assignment.
    permission_set_arn = data.aws_ssoadmin_permission_set.SYM_TEMPLATE_VAR_FLOW_RESOURCE_NAME_SYM_TEMPLATE_VAR_PERMISSION_SET_NAME.arn
    account_id         = "SYM_TEMPLATE_VAR_ACCOUNT_ID"
  }
}

# The Strategy your Flow uses to create Account Assignments to AWS SSO Permission Sets/Account combinations
resource "sym_strategy" "SYM_TEMPLATE_VAR_FLOW_RESOURCE_NAME_aws_sso" {
  type           = "aws_sso"
  name           = "SYM_TEMPLATE_VAR_FLOW_NAME-aws-sso-strategy"
  integration_id = sym_integration.aws_sso_context.id

  # This must be a list of `aws_sso_permission_set` sym_targets that users can request to be escalated to
  targets = [sym_target.SYM_TEMPLATE_VAR_FLOW_RESOURCE_NAME_target.id]

  settings = {
    instance_arn = module.sso_connector.settings["instance_arn"]
  }
}

resource "sym_flow" "SYM_TEMPLATE_VAR_FLOW_RESOURCE_NAME_aws_sso" {
  name  = "SYM_TEMPLATE_VAR_FLOW_NAME-aws-sso"
  label = "AWS SSO Access"

  implementation = "${path.module}/impls/aws_sso_SYM_TEMPLATE_VAR_FLOW_RESOURCE_NAME_impl.py"
  environment_id = sym_environment.this.id

  params {
    # By specifying a strategy, this Flow will now be able to manage access (escalate/de-escalate)
    # to the targets specified in the `sym_strategy` resource.
    strategy_id = sym_strategy.SYM_TEMPLATE_VAR_FLOW_RESOURCE_NAME_aws_sso.id

    # Each prompt_field defines a custom form field for the Slack modal that
    # requesters fill out to make their requests.
    prompt_field {
      name     = "reason"
      label    = "Why do you need access?"
      type     = "string"
      required = true
    }

    prompt_field {
      name           = "duration"
      type           = "duration"
      allowed_values = ["30m", "1h"]
      required       = true
    }
  }
}
