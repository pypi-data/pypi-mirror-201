Metadata-Version: 2.1
Name: spreg
Version: 1.3.2
Summary: PySAL Spatial Econometrics Package
Home-page: https://github.com/pysal/spreg
Download-URL: https://pypi.python.org/pypi/spreg
Maintainer: PySAL Developers
Maintainer-email: pysal-dev@googlegroups.com
License: BSD
Keywords: spatial statistics
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: GIS
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Description-Content-Type: text/markdown
Provides-Extra: tests
Provides-Extra: plus
Provides-Extra: docs
License-File: LICENSE.txt

# spreg

[![unittests](https://github.com/pysal/spreg/workflows/.github/workflows/unittests.yml/badge.svg)](https://github.com/pysal/spreg/actions?query=workflow%3A.github%2Fworkflows%2Funittests.yml)
[![codecov](https://codecov.io/gh/pysal/spreg/branch/master/graph/badge.svg?token=9VrJpIYIl3)](https://codecov.io/gh/pysal/spreg)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/spreg)
![PyPI](https://img.shields.io/pypi/v/spreg)
[![Anaconda-Server Badge](https://anaconda.org/conda-forge/spreg/badges/version.svg)](https://anaconda.org/conda-forge/spreg)
![GitHub commits since latest release (branch)](https://img.shields.io/github/commits-since/pysal/spreg/latest)
[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.4421373.svg)](https://zenodo.org/record/4421373)

## PySAL Spatial Econometrics Package

`spreg`, short for “spatial regression,” is a Python package to estimate simultaneous autoregressive spatial regression models. These models are useful when modeling processes where observations interact with one another. 
This package is part of a [refactoring of PySAL](https://github.com/pysal/pysal/wiki/PEP-13:-Refactor-PySAL-Using-Submodules).

## License information

See the file "LICENSE.txt" for information on the history of this
software, terms & conditions for usage, and a DISCLAIMER OF ALL
WARRANTIES.

