Metadata-Version: 2.1
Name: jupyter_rtc_test
Version: 0.0.3
Summary: Test for Jupyter RTC.
Project-URL: Homepage, https://github.com/datalayer/jupyter-rtc-test
Project-URL: Bug Tracker, https://github.com/datalayer/jupyter-rtc-test/issues
Project-URL: Repository, https://github.com/datalayer/jupyter-rtc-test.git
Author-email: Datalayer <eric@datalayer.io>
License: BSD 3-Clause License
        
        Copyright (c) 2022, Datalayer
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
License-File: LICENSE
Classifier: Framework :: Jupyter
Classifier: Framework :: Jupyter :: JupyterLab
Classifier: Framework :: Jupyter :: JupyterLab :: 3
Classifier: Framework :: Jupyter :: JupyterLab :: Extensions
Classifier: Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.9
Requires-Dist: jupyter-server<3,>=2.0
Provides-Extra: test
Requires-Dist: coverage; extra == 'test'
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-asyncio; extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'
Requires-Dist: pytest-jupyter; extra == 'test'
Requires-Dist: pytest-tornasync; extra == 'test'
Requires-Dist: websockets; extra == 'test'
Requires-Dist: ypy-websocket; extra == 'test'
Description-Content-Type: text/markdown

[![Datalayer](https://assets.datalayer.design/datalayer-25.svg)](https://datalayer.io)

# Jupyter RTC Test

The goal of this repository is to stress test the Realtime Collaboration (RTC) feature of Jupyter (Lab and Server).

```bash
yarn install
yarn test
yarn test:py
```

You can also run the tests from a JupyterLab extension.

```bash
pip install -e .[test]
jupyter labextension develop . --overwrite
jupyter labextension list
jupyter server extension list
yarn jupyterlab
```

This repository contains source code taken from the following repositories under `BSD-3` or `MIT` license.

- https://github.com/jupyterlab/jupyter_collaboration, the JupyterLab extensions that delivers the RTC functionality to the end users.
- https://github.com/jupyter-server/jupyter_ydoc, Jupyter document structures for collaborative editing using `Y.js` JavaScript and `ypy` Python.
- https://github.com/y-crdt/ypy-websocket, WebSocket connector for `ypy`.
- https://github.com/y-crdt/ypy, Python bindings to `y-crdt`.
- https://github.com/y-crdt/y-crdt, Rust port of Y.js with WASM javascript artificats.
- https://github.com/yjs/yjs, JavaScript shared data types for building collaborative software.

More information about the details of the implementatoin can be read on [this document](https://github.com/datalayer/jupyter-rtc-test/blob/main/docs/README.md).
