{"version":3,"file":"lib_jupyterlab_index_js.d99337d0f60cd2fda68d.js","mappings":"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","sources":["webpack://@datalayer/jupyter-rtc-test/./style/base.css","webpack://@datalayer/jupyter-rtc-test/./style/index.css","webpack://@datalayer/jupyter-rtc-test/./lib/examples/mock/MockComponent.js","webpack://@datalayer/jupyter-rtc-test/./lib/examples/mock/MockTab1.js","webpack://@datalayer/jupyter-rtc-test/./lib/jupyterlab/handler.js","webpack://@datalayer/jupyter-rtc-test/./lib/jupyterlab/index.js","webpack://@datalayer/jupyter-rtc-test/./lib/jupyterlab/widget.js","webpack://@datalayer/jupyter-rtc-test/./style/index.css?1492"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n    See the JupyterLab Developer Guide for useful CSS Patterns:\\n\\n    https://jupyterlab.readthedocs.io/en/stable/developer/css.html\\n*/\\n\\n.jupyterrtctest-container {\\n  overflow-y: visible;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/base.css\"],\"names\":[],\"mappings\":\"AAAA;;;;CAIC;;AAED;EACE,mBAAmB;AACrB\",\"sourcesContent\":[\"/*\\n    See the JupyterLab Developer Guide for useful CSS Patterns:\\n\\n    https://jupyterlab.readthedocs.io/en/stable/developer/css.html\\n*/\\n\\n.jupyterrtctest-container {\\n  overflow-y: visible;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../node_modules/css-loader/dist/cjs.js!./base.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { ThemeProvider, BaseStyles, Box } from '@primer/react';\nimport { CpuIcon, CodeIcon, AlertIcon, HistoryIcon, CommentDiscussionIcon } from '@primer/octicons-react';\nimport { UnderlineNav } from '@primer/react/drafts';\nimport MockTab1 from './MockTab1';\nconst MockComponent = () => {\n    const [tab, setTab] = useState(1);\n    return (_jsx(_Fragment, { children: _jsx(ThemeProvider, { children: _jsx(BaseStyles, { children: _jsxs(Box, { style: { maxWidth: 700 }, children: [_jsx(Box, { mb: 3, children: _jsxs(UnderlineNav, { children: [_jsx(UnderlineNav.Item, { \"aria-current\": \"page\", icon: CpuIcon, onSelect: e => {\n                                            e.preventDefault();\n                                            setTab(1);\n                                        }, children: \"Kernels\" }), _jsx(UnderlineNav.Item, { icon: CodeIcon, counter: 6, onSelect: e => {\n                                            e.preventDefault();\n                                            setTab(2);\n                                        }, children: \"Notebooks\" }), _jsx(UnderlineNav.Item, { icon: AlertIcon, onSelect: e => {\n                                            e.preventDefault();\n                                            setTab(3);\n                                        }, children: \"Warnings\" }), _jsx(UnderlineNav.Item, { icon: HistoryIcon, counter: 7, onSelect: e => {\n                                            e.preventDefault();\n                                            setTab(4);\n                                        }, children: \"History\" }), _jsx(UnderlineNav.Item, { icon: CommentDiscussionIcon, onSelect: e => {\n                                            e.preventDefault();\n                                            setTab(5);\n                                        }, children: \"More\" })] }) }), _jsx(Box, { children: tab === 1 && _jsx(MockTab1, {}) })] }) }) }) }));\n};\nexport default MockComponent;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { ActionList, Avatar, ActionMenu, ProgressBar, Box } from '@primer/react';\nimport { LinkIcon, AlertIcon } from '@primer/octicons-react';\nimport { DaskLogoIcon, PyTorchLogoIcon, TensorFlowLogoIcon } from '@datalayer/icons';\nconst MockTab1 = () => {\n    return (_jsxs(_Fragment, { children: [_jsxs(ActionMenu, { children: [_jsx(ActionMenu.Button, { children: \"Kernels\" }), _jsx(ActionMenu.Overlay, { children: _jsxs(ActionList, { children: [_jsx(ActionList.Item, { onSelect: event => console.log('New file'), children: \"New kernel\" }), _jsx(ActionList.Item, { children: \"Copy kernel\" }), _jsx(ActionList.Item, { children: \"Edit kernel\" }), _jsx(ActionList.Divider, {}), _jsx(ActionList.Item, { variant: \"danger\", children: \"Delete kernel\" })] }) })] }), _jsxs(ActionList, { children: [_jsxs(ActionList.Item, { children: [_jsx(ActionList.LeadingVisual, { children: _jsx(DaskLogoIcon, {}) }), \"Dask kernel\"] }), _jsxs(ActionList.Item, { children: [_jsx(ActionList.LeadingVisual, { children: _jsx(PyTorchLogoIcon, {}) }), \"PyTorch Kernel\"] }), _jsxs(ActionList.Item, { children: [_jsx(ActionList.LeadingVisual, { children: _jsx(TensorFlowLogoIcon, {}) }), \"Tensorflow Kernel\"] }), _jsx(Box, { borderColor: \"border.default\", borderBottomWidth: 1, borderBottomStyle: \"solid\", pb: 3 }), _jsxs(ActionList.Item, { children: [_jsx(ActionList.LeadingVisual, { children: _jsx(LinkIcon, {}) }), \"Starting...\"] }), _jsx(ProgressBar, { progress: 80 }), _jsx(Box, { borderColor: \"border.default\", borderBottomWidth: 1, borderBottomStyle: \"solid\", pb: 3 }), _jsxs(ActionList.Item, { children: [_jsx(ActionList.LeadingVisual, { children: _jsx(Avatar, { src: \"https://github.com/mona.png\" }) }), \"Me\"] }), _jsxs(ActionList.Item, { variant: \"danger\", children: [_jsx(ActionList.LeadingVisual, { children: _jsx(AlertIcon, {}) }), \"4 vulnerabilities\"] })] })] }));\n};\nexport default MockTab1;\n","import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, 'jupyter_rtc_test', // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    let data = await response.text();\n    if (data.length > 0) {\n        try {\n            data = JSON.parse(data);\n        }\n        catch (error) {\n            console.log('Not a JSON response body.', response);\n        }\n    }\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message || data);\n    }\n    return data;\n}\n","import { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { MainAreaWidget, ICommandPalette } from '@jupyterlab/apputils';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { reactIcon } from '@jupyterlab/ui-components';\nimport { requestAPI } from './handler';\nimport { JupyterRTCTestWidget } from './widget';\nimport './../../style/index.css';\n/**\n * The command IDs used by the react-widget plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.create = 'create-jupyter-rtc-test-widget';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * Initialization data for the @datalayer/jupyter-rtc-test extension.\n */\nconst plugin = {\n    id: '@datalayer/jupyter-rtc-test:plugin',\n    autoStart: true,\n    requires: [ICommandPalette],\n    optional: [ISettingRegistry, ILauncher],\n    activate: (app, palette, settingRegistry, launcher) => {\n        const { commands } = app;\n        const command = CommandIDs.create;\n        commands.addCommand(command, {\n            caption: 'Show Jupyter RTC Test',\n            label: 'Jupyter RTC Test',\n            icon: (args) => reactIcon,\n            execute: () => {\n                const content = new JupyterRTCTestWidget();\n                const widget = new MainAreaWidget({ content });\n                widget.title.label = 'Jupyter RTC Test';\n                widget.title.icon = reactIcon;\n                app.shell.add(widget, 'main');\n            }\n        });\n        const category = 'Jupyter RTC Test';\n        palette.addItem({ command, category, args: { origin: 'from palette' } });\n        if (launcher) {\n            launcher.add({\n                command,\n                category: 'Jupyter RTC',\n                rank: -1\n            });\n        }\n        console.log('JupyterLab extension @datalayer/jupyter-rtc-test is activated!');\n        if (settingRegistry) {\n            settingRegistry\n                .load(plugin.id)\n                .then(settings => {\n                console.log('@datalayer/jupyter-rtc-test settings loaded:', settings.composite);\n            })\n                .catch(reason => {\n                console.error('Failed to load settings for @datalayer/jupyter-rtc-test.', reason);\n            });\n        }\n        requestAPI('get_example')\n            .then(data => {\n            console.log(data);\n        })\n            .catch(reason => {\n            console.error(`The jupyter_rtc_test server extension appears to be missing.\\n${reason}`);\n        });\n    }\n};\nexport default plugin;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport MockComponent from '../examples/mock/MockComponent';\nexport class JupyterRTCTestWidget extends ReactWidget {\n    constructor() {\n        super();\n        this.addClass('jupyterrtctest-container');\n    }\n    render() {\n        return _jsx(MockComponent, {});\n    }\n}\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}