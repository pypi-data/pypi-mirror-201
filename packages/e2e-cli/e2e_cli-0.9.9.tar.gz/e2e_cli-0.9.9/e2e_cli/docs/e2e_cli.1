.TH 1 "March 2023" "E2E CLI User Manual"
.SH E2E CLI :

.SH SEE ALSO
      documentation at https://docs.e2enetworks.com/e2e_cli/index.html

.SH NAME
       e2e_cli  

.SH SYNOPSIS
       e2e_cli [options] <command> <subcommand>
       e2e_cli [-h]  [--help]    for help

.SH DESCRIPTION
       A command line tool developed by E2E Networks Ltd.
       Used to access and manage my account/ e2e cloud services from cmd/shell
       Ex- managing nodes, buckets,etc from cmd/shell like launching nodes or versioning of         		  buckets, etc
        
       Mandatory  arguments  to  long  options are mandatory for short options
       too.
       [options]  <command> <subcommand>
        
.SH OPTION  
  -> choosing options such as alias or file addition, etc
.SH Command    
  -> choosing resource to be managed like nodes , buckets, DbaaS, etc
.SH Subcommand 	
  -> action to be performed on the selected resource like CRUD operations, versioning incase 		of buckets, launching/switching-off nodes, etc
	




.SH e2e_cli 
optional arguments:
  -h, --help     to show help message 

.SH Option : REQUIRED
    @<alias>    account/user to be accessed
    doc         to view this documentation
    file        using a file



.SH  Commands:
  {config,node,lb,bucket,dbaas,image,autoscaling,vpc,cdn,volumes}
    config              To add or delete api key and auth token
    node                To apply crud operations over Nodes
    lb                  To apply operations over Load-Balancer
    bucket              To create/delete/list buckets of the user
    dbaas               To perform operations over DBaaS service provided
    image               To perform operations over Image service provided
    autoscaling         To create/delete/list autoscaling for the user
    vpc                 To create/delete/list vpc for the user
    cdn                 To create/delete/list cdn for the user
    volumes             To create/delete/list cdn for the user




.SH CONFIG : creating/deleting users
usage: e2e_cli config [-h] {create,delete} ... alias=<alias>

.SH positional arguments:
  alias         The name of your API access credentials   REQUIRED

.SH optional arguments:
  -h, --help    show this help message and exit

.SH Config SubCommands:    REQUIRED
  {create,delete, view}
    create         To create api key and auth token to user local system
    delete         To delete api key and auth token from user local system
    view           To view all alias on system

 .SH Alias Name :   REQUIRED
 the name by which user wants to create the auth token and api key
 this will be used subsequently to access/manage user my account and resources 

	After this enter your api key and auth token
ex-
e2e_cli config create adi*****
Enter your api key: tyag****
Enter your auth token: *******





.SH BUCKET :
usage: e2e_cli bucket [-h] {create,delete,list} ... alias=<alias>

.SH positional arguments:
  alias              The name of your API access credentials

.SH optional arguments:
  -h, --help         show this help message and exit

.SH bucket Commands:  REQUIRED
  {create,delete,list}
    create              To create a new bucket
    delete           To delete a specific bucket
    list             To get a list of all buckets

ex- 
e2e_cli bucket create am****
creating
input name of your new bucket : **********
created_at :  2023-02-09T11:42:07.083836Z bucket name :  **********
created

e2e_cli bucket list am****
Your Buckets : 
1 created_at :  2023-02-09T11:42:07.083836Z bucket_size :  0 bytes f******
2 created_at :  2023-02-09T11:45:11.531493Z bucket_size :  0 bytes g******











.SH NODE : 
usage: e2e_cli node [-h] {create,delete,list,get} ... alias=<alias>

.SH positional arguments:
  alias                 The name of your API access credentials

.SH optional arguments:
  -h, --help            show this help message and exit

.SH node Commands:    REQUIRED
  {create,delete,list,get}
    create               To create a new node
    delete               To delete a specific node
    list                 To get a list of all nodes
    get                  To get a list of all nodes

ex - 
e2e_cli node create ama***
Enter your requirements :
please enter OS you require  *******
please enter name of your node  ***********
please enter system requirements/plans  ************
region in which server is desired mumbai/ncr  *********











.SH DBAAS :
usage: e2e_cli dbaas [-h] { create, delete, list, ls } ... alias=<alias_name>

.SH positional arguments:
  alias                 The name of your API access credentials

.SH optional arguments:
  -h, --help            show this help message and exit

.SH DBaaS Commands:
  {create,delete,list,ls}
    create                 To launch a new dbaas
    delete              To delete a created dbaas
    list (ls)           To list all of your dbaas

create  -- The create command here is to create a database from the services provided by e2e. When you try the create command with our cli tool it ask you to enter your database name as well the username and password you want to assign to the database, while creating the password please keep in mind that the password should be atleast 16 letters long with a uppercase, lowercase, a number and a special character. You can also assign groups to your database but if you leave it empty it will assign a “Default” group to your db. We will show you all thye plans that our available in our myaccount you need to select a software service and it’s related plans are listed for you you can select a plan and we will launch a database for you.

delete – If you wish to delete the database service that you have launched, you can use this command. The command will list all the databases you have currently with your account and then you can select a database from the list.

list(ls) – you can either use list to list all the database you have currently.






.SH LoadBalancer : 
usage: e2e_cli lb [-h] {create,delete,list} ... alias

.SH positional arguments:
  alias                 The name of your API access credentials

.SH optional arguments:
  -h, --help            show this help message and exit

.SH LB Commands:
  {create,delete,list,edit}
    create                 To create a new loadbalancer
    delete              To delete a specific loadbalancer
    list                To get a list of loadbalancer
    edit                To edit a loadbalancer

create – The create command here is to create a loadbalancer. When you use this command the cli tool asks you for the type of loadbalancer you require to create. The two types of lb we provide you are “Classic” and “Advance”. A classic loadbalancer will have no rules assigned. Also for the protocol part of the loadbalncer you can only use Http for right now, we will try to embed the Https protocol in our further releases. After that it will show  you the list of nodes you have active. You need to choose the node you want and provide us the port of your convience, please make sure your node has teh port open if not create the accept port to your nodes iptables. You cannot create bitninja verification to the lb’s yet. After that the response of the command will provide you with the public/private ip of the loadbalancer.

A advance loadbalancer will ask you for the access control list rules to your loadbalancer. These rules can be path based, host based, source Ip based, Http Method based or even Query parameters based. You can have multiple backends here so you need to map rules to the backends as well.

delete -- if you wish to delete the loadbalancer that you have launched, you can use this command. The command will list all the loadbalncer you have currently with your account and then you can select a database from the list.  

list – you can use list command  to list all the loadbalncer you have currently.

edit – The edit command will provide you three different edit options:- Change the name of the loadbalancer, edit a node port or create more nodes. You will be provided with the list of all load balancers and you can select one to perform one of the three operations.
While creating new nodes you will be provided the backend servers you have, keep in mind you will be provided only those nodes to create which are not already present in your backend. You can’t create a duplicate node in the same backend.   

