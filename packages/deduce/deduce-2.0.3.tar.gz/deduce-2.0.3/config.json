{
    "adjacent_annotations_slack": "[\\.\\s\\-,]?[\\.\\s]?",
    "resolve_overlap_strategy": {
        "attribute": "length",
        "ascending": false
    },
    "redactor_open_char": "<",
    "redactor_close_char": ">",
    "annotators": {
        "prefix_with_name": {
            "annotator_type": "token_pattern",
            "group": "names",
            "args": {
                "pattern": {
                    "module": "deduce.pattern",
                    "class": "PrefixWithNamePattern",
                    "tag": "prefix+naam"
                }
            }
        },
        "interfix_with_name": {
            "annotator_type": "token_pattern",
            "group": "names",
            "args": {
                "pattern": {
                    "module": "deduce.pattern",
                    "class": "InterfixWithNamePattern",
                    "tag": "interfix+naam"
                }
            }
        },
        "initial_with_capital": {
            "annotator_type": "token_pattern",
            "group": "names",
            "args": {
                "pattern": {
                    "module": "deduce.pattern",
                    "class": "InitialWithCapitalPattern",
                    "tag": "initiaal+naam"
                }
            }
        },
        "initial_interfix": {
            "annotator_type": "token_pattern",
            "group": "names",
            "args": {
                "pattern": {
                    "module": "deduce.pattern",
                    "class": "InitiaalInterfixCapitalPattern",
                    "tag": "initiaal+interfix+naam"
                }
            }
        },
        "first_name_lookup": {
            "annotator_type": "token_pattern",
            "group": "names",
            "args": {
                "pattern": {
                    "module": "deduce.pattern",
                    "class": "FirstNameLookupPattern",
                    "tag": "voornaam_onbekend"
                }
            }
        },
        "surname_lookup": {
            "annotator_type": "token_pattern",
            "group": "names",
            "args": {
                "pattern": {
                    "module": "deduce.pattern",
                    "class": "SurnameLookupPattern",
                    "tag": "achternaam_onbekend"
                }
            }
        },
        "person_first_name": {
            "annotator_type": "token_pattern",
            "group": "names",
            "args": {
                "pattern": {
                    "module": "deduce.pattern",
                    "class": "PersonFirstNamePattern",
                    "tag": "voornaam_patient"
                }
            }
        },
        "person_initial_from_name": {
            "annotator_type": "token_pattern",
            "group": "names",
            "args": {
                "pattern": {
                    "module": "deduce.pattern",
                    "class": "PersonInitialFromNamePattern",
                    "tag": "initiaal_patient"
                }
            }
        },
        "person_initials": {
            "annotator_type": "token_pattern",
            "group": "names",
            "args": {
                "pattern": {
                    "module": "deduce.pattern",
                    "class": "PersonInitialsPattern",
                    "tag": "initialen_patient"
                }
            }
        },
        "person_surname": {
            "annotator_type": "token_pattern",
            "group": "names",
            "args": {
                "pattern": {
                    "module": "deduce.pattern",
                    "class": "PersonSurnamePattern",
                    "tag": "achternaam_patient"
                }
            }
        },
        "name_context": {
            "annotator_type": "annotation_context",
            "group": "names",
            "args": {
                "tags": [
                    "initia",
                    "naam",
                    "interfix",
                    "prefix"
                ],
                "patterns": [
                    {
                        "pattern": {
                            "module": "deduce.pattern",
                            "class": "InitialsContextPattern",
                            "tag": "initiaal+{tag}"
                        }
                    },
                    {
                        "pattern": {
                            "module": "deduce.pattern",
                            "class": "InterfixContextPattern",
                            "tag": "{tag}+interfix+achternaam"
                        }
                    },
                    {
                        "pattern": {
                            "module": "deduce.pattern",
                            "class": "InitialNameContextPattern",
                            "tag": "{tag}+initiaalhoofdletternaam"
                        }
                    },
                    {
                        "pattern": {
                            "module": "deduce.pattern",
                            "class": "NexusContextPattern",
                            "tag": "{tag}+en+hoofdletternaam"
                        }
                    }
                ]
            }
        },
        "institution": {
            "annotator_type": "multi_token",
            "group": "institutions",
            "args": {
                "lookup_values": "institutions",
                "tag": "instelling"
            }
        },
        "altrecht": {
            "annotator_type": "regexp",
            "group": "institutions",
            "args": {
                "regexp_pattern": "[aA][lL][tT][rR][eE][cC][hH][tT]((\\s[A-Z][\\w]*)*)",
                "tag": "instelling"
            }
        },
        "residence": {
            "annotator_type": "multi_token",
            "group": "locations",
            "args": {
                "lookup_values": "residences",
                "tag": "locatie"
            }
        },
        "street_with_number": {
            "annotator_type": "regexp",
            "group": "locations",
            "args": {
                "regexp_pattern": "([A-Z]\\w+(baan|bolwerk|dam|dijk|dreef|gracht|hof|kade|laan|markt|pad|park|plantsoen|plein|singel|steeg|straat|weg)(\\s(\\d+){1,6}\\w{0,2})?)(\\W|$)",
                "tag": "locatie",
                "capturing_group": 1
            }
        },
        "postal_code": {
            "annotator_type": "regexp",
            "group": "locations",
            "args": {
                "regexp_pattern": "(\\d{4} (?!MG)[A-Z]{2}|\\d{4}(?!mg|MG)[a-zA-Z]{2})(\\W|$)",
                "tag": "locatie",
                "capturing_group": 1
            }
        },
        "postbus": {
            "annotator_type": "regexp",
            "group": "locations",
            "args": {
                "regexp_pattern": "([Pp]ostbus\\s\\d{5})",
                "tag": "locatie"
            }
        },
        "phone_1": {
            "annotator_type": "regexp",
            "group": "phone_numbers",
            "args": {
                "regexp_pattern": "(((0)[1-9]{2}[0-9][-]?[1-9][0-9]{5})|((\\+31|0|0031)[1-9][0-9][-]?[1-9][0-9]{6}))",
                "tag": "telefoonnummer"
            }
        },
        "phone_2": {
            "annotator_type": "regexp",
            "group": "phone_numbers",
            "args": {
                "regexp_pattern": "(((\\+31|0|0031)6)[-]?[1-9][0-9]{7})",
                "tag": "telefoonnummer"
            }
        },
        "phone_3": {
            "annotator_type": "regexp",
            "group": "phones",
            "args": {
                "regexp_pattern": "((\\(\\d{3}\\)|\\d{3})\\s?\\d{3}\\s?\\d{2}\\s?\\d{2})",
                "tag": "telefoonnummer"
            }
        },
        "patient_number": {
            "annotator_type": "regexp",
            "group": "patient_numbers",
            "args": {
                "regexp_pattern": "\\d{7}",
                "tag": "patientnummer"
            }
        },
        "date_1": {
            "annotator_type": "regexp",
            "group": "dates",
            "args": {
                "regexp_pattern": "(([1-9]|0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012]|[1-9])([- /.]{,2}(\\d{4}|\\d{2}))?)(\\D|$)",
                "tag": "datum",
                "capturing_group": 1
            }
        },
        "date_2": {
            "annotator_type": "regexp",
            "group": "dates",
            "args": {
                "regexp_pattern": "(\\d{1,2}[^\\w]{,2}(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)([- /.]{,2}(\\d{4}|\\d{2}))?)(\\D|$)",
                "tag": "datum",
                "capturing_group": 1
            }
        },
        "age": {
            "annotator_type": "regexp",
            "group": "ages",
            "args": {
                "regexp_pattern": "(\\d{1,3})([ -](jarige|jarig|jaar))",
                "tag": "leeftijd",
                "capturing_group": 1
            }
        },
        "email": {
            "annotator_type": "regexp",
            "group": "urls",
            "args": {
                "regexp_pattern": "([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)",
                "tag": "url"
            }
        },
        "url_1": {
            "annotator_type": "regexp",
            "group": "urls",
            "args": {
                "regexp_pattern": "((?!mailto:)((?:http|https|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|((?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(\\.([a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:([/?#])[^\\s]*)?)",
                "tag": "url"
            }
        },
        "url_2": {
            "annotator_type": "regexp",
            "group": "urls",
            "args": {
                "regexp_pattern": "([\\w\\d.-]{3,}(\\.)(nl|com|net|be)(/[^\\s]+)?)",
                "tag": "url"
            }
        }
    }
}