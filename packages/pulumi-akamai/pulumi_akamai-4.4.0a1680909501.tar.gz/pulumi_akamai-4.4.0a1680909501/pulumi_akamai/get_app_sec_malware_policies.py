# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetAppSecMalwarePoliciesResult',
    'AwaitableGetAppSecMalwarePoliciesResult',
    'get_app_sec_malware_policies',
    'get_app_sec_malware_policies_output',
]

@pulumi.output_type
class GetAppSecMalwarePoliciesResult:
    """
    A collection of values returned by getAppSecMalwarePolicies.
    """
    def __init__(__self__, config_id=None, id=None, json=None, malware_policy_id=None, output_text=None):
        if config_id and not isinstance(config_id, int):
            raise TypeError("Expected argument 'config_id' to be a int")
        pulumi.set(__self__, "config_id", config_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if json and not isinstance(json, str):
            raise TypeError("Expected argument 'json' to be a str")
        pulumi.set(__self__, "json", json)
        if malware_policy_id and not isinstance(malware_policy_id, int):
            raise TypeError("Expected argument 'malware_policy_id' to be a int")
        pulumi.set(__self__, "malware_policy_id", malware_policy_id)
        if output_text and not isinstance(output_text, str):
            raise TypeError("Expected argument 'output_text' to be a str")
        pulumi.set(__self__, "output_text", output_text)

    @property
    @pulumi.getter(name="configId")
    def config_id(self) -> int:
        return pulumi.get(self, "config_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def json(self) -> str:
        return pulumi.get(self, "json")

    @property
    @pulumi.getter(name="malwarePolicyId")
    def malware_policy_id(self) -> Optional[int]:
        return pulumi.get(self, "malware_policy_id")

    @property
    @pulumi.getter(name="outputText")
    def output_text(self) -> str:
        return pulumi.get(self, "output_text")


class AwaitableGetAppSecMalwarePoliciesResult(GetAppSecMalwarePoliciesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAppSecMalwarePoliciesResult(
            config_id=self.config_id,
            id=self.id,
            json=self.json,
            malware_policy_id=self.malware_policy_id,
            output_text=self.output_text)


def get_app_sec_malware_policies(config_id: Optional[int] = None,
                                 malware_policy_id: Optional[int] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAppSecMalwarePoliciesResult:
    """
    **Scopes**: Security configuration; malware protection

    Returns information about your malware policies. Malware polices help you control what happens when a request is made to upload files of various types. These policies help you control how your website is protected from malicious uploads.

    ## Example Usage

    Basic usage:

    ```python
    import pulumi
    import pulumi_akamai as akamai

    configuration = akamai.get_app_sec_configuration(name="Documentation")
    malware_policies = akamai.get_app_sec_malware_policies(config_id=configuration.config_id)
    pulumi.export("malwarePoliciesOutput", malware_policies.output_text)
    pulumi.export("malwarePoliciesJson", malware_policies.json)
    malware_policy = akamai.get_app_sec_malware_policies(config_id=configuration.config_id,
        malware_policy_id=122149)
    pulumi.export("malwarePolicyJson", malware_policy.json)
    pulumi.export("malwarePolicyOutput", malware_policy.output_text)
    ```
    ## Output Options

    The following options can be used to determine the information returned, and how that returned information is formatted:

    - `output_text`. Tabular report showing the ID and name of the malware policies.
    - `json`. JSON-formatted list of the malware policy information.


    :param int config_id: . Unique identifier of the security configuration associated with the malware policies.
    :param int malware_policy_id: . Unique identifier of the malware policy you want to return information for. If not included, information is returned for all of your malware policies.
    """
    __args__ = dict()
    __args__['configId'] = config_id
    __args__['malwarePolicyId'] = malware_policy_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('akamai:index/getAppSecMalwarePolicies:getAppSecMalwarePolicies', __args__, opts=opts, typ=GetAppSecMalwarePoliciesResult).value

    return AwaitableGetAppSecMalwarePoliciesResult(
        config_id=__ret__.config_id,
        id=__ret__.id,
        json=__ret__.json,
        malware_policy_id=__ret__.malware_policy_id,
        output_text=__ret__.output_text)


@_utilities.lift_output_func(get_app_sec_malware_policies)
def get_app_sec_malware_policies_output(config_id: Optional[pulumi.Input[int]] = None,
                                        malware_policy_id: Optional[pulumi.Input[Optional[int]]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAppSecMalwarePoliciesResult]:
    """
    **Scopes**: Security configuration; malware protection

    Returns information about your malware policies. Malware polices help you control what happens when a request is made to upload files of various types. These policies help you control how your website is protected from malicious uploads.

    ## Example Usage

    Basic usage:

    ```python
    import pulumi
    import pulumi_akamai as akamai

    configuration = akamai.get_app_sec_configuration(name="Documentation")
    malware_policies = akamai.get_app_sec_malware_policies(config_id=configuration.config_id)
    pulumi.export("malwarePoliciesOutput", malware_policies.output_text)
    pulumi.export("malwarePoliciesJson", malware_policies.json)
    malware_policy = akamai.get_app_sec_malware_policies(config_id=configuration.config_id,
        malware_policy_id=122149)
    pulumi.export("malwarePolicyJson", malware_policy.json)
    pulumi.export("malwarePolicyOutput", malware_policy.output_text)
    ```
    ## Output Options

    The following options can be used to determine the information returned, and how that returned information is formatted:

    - `output_text`. Tabular report showing the ID and name of the malware policies.
    - `json`. JSON-formatted list of the malware policy information.


    :param int config_id: . Unique identifier of the security configuration associated with the malware policies.
    :param int malware_policy_id: . Unique identifier of the malware policy you want to return information for. If not included, information is returned for all of your malware policies.
    """
    ...
